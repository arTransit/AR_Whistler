#! <?xml version="1.0" encoding="windows-1252" ?>
#! <WORKSPACE
#    
#    
#    Windows command-line to run this workspace:
#    
#    
#    fme.exe matchGFI.fmw
#          --SourceDataset_SQLITE3 C:\AndrewRoss\Work\AR_Whistler\Data\whistlerData.db
#          --DestDataset_CSV_7 C:\AndrewRoss\Work\AR_Whistler\Data
#    
#    
#! LAST_SAVE_BUILD="FME(R) 2012 SP2 (20120417 - Build 12238 - WIN64)"
#! MAX_LOG_FEATURES="200"
#! SOURCE="NONE"
#! LEGAL_TERMS_CONDITIONS=""
#! END_TCL=""
#! DESTINATION="NONE"
#! SHOW_BOOKMARKS="true"
#! GRID_VISIBLE="false"
#! SHOW_ANNOTATIONS="true"
#! FME_SERVER_SERVICES=""
#! LOG_MAX_RECORDED_FEATURES="200"
#! END_PYTHON=""
#! CATEGORY=""
#! REQUIREMENTS_KEYWORD=""
#! GRID_HEIGHT="50"
#! FME_REPROJECTION_ENGINE="FME"
#! FME_BUILD_NUM="12238"
#! SHOW_INFO_NODES="true"
#! BEGIN_PYTHON=""
#! DESCRIPTION=""
#! GRID_SNAPTO="false"
#! GRID_WIDTH="50"
#! BEGIN_TCL=""
#! FME_STROKE_MAX_DEVIATION="0"
#! LOG_FILE=""
#! HISTORY=""
#! VIEW_POSITION="19 -503"
#! SOURCE_ROUTING_FILE=""
#! ZOOM_SCALE="100"
#! PASSWORD=""
#! VIEW_PAGE_BREAKS="false"
#! WORKSPACE_VERSION="1"
#! DESTINATION_ROUTING_FILE=""
#! LAST_SAVE_DATE="2013-02-14T12:29:14"
#! FME_GEOMETRY_HANDLING="Enhanced"
#! TITLE=""
#! USAGE=""
#! IGNORE_READER_FAILURE="No"
#! REQUIREMENTS=""
#! WARN_INVALID_XFORM_PARAM="Yes"
#! REDIRECT_TERMINATORS="NONE"
#! ATTR_TYPE_ENCODING="SDF"
#! >
#! <DATASETS>
#! <DATASET
#! IS_SOURCE="true"
#! ROLE="READER"
#! FORMAT="SQLITE3"
#! DATASET="$(SourceDataset_SQLITE3)"
#! KEYWORD="SQLITE3_1"
#! MULTI_GEOM_ALLOWED="false"
#! ATTR_MAX_LENGTH="60"
#! ATTR_CASE="ANY"
#! ALLOWED_FEAT_TYPES=""
#! WRITE_DEFS="true"
#! DEFLINE_TEMPLATE="sqlite3_sql_statement &quot;&quot; sqlite3_where_clause &quot;&quot;"
#! DEFLINE_ATTRS="true"
#! EXPOSABLE_ATTRS="fme_type varchar(50) fme_text_string varchar(50) multi_reader_full_id integer fme_feature_type varchar(50) fme_basename varchar(50) multi_reader_type varchar(50) fme_geometry fme_char(50) multi_reader_keyword varchar(50) fme_sweep_angle float fme_rotation float fme_secondary_axis float fme_fill_color varchar(50) fme_dataset varchar(50) fme_primary_axis float fme_start_angle float fme_text_size float fme_color varchar(50) multi_reader_id integer db_type varchar(254)"
#! DEFLINE_PARMS="&quot;GUI OPTIONAL TEXT sqlite3_where_clause  WHERE Clause&quot; &quot;&quot; &quot;GUI OPTIONAL TEXT sqlite3_sql_statement     SELECT Statement&quot; &quot;&quot; "
#! ATTR_INDEX_TYPES="indexed unique"
#! ATTR_NAME_INVALID_CHARS=""
#! SUPPORTS_FEATURE_TYPE_FANOUT="true"
#! ENABLED="true"
#! DYNAMIC_FEATURE_TYPES_LIST_ON_MERGE="true"
#! GENERATE_FME_BUILD_NUM="12238"
#! MIN_FEATURES=""
#! START_FEATURE=""
#! MAX_FEATURES=""
#! COORDSYS=""
#! FEATURE_TYPES=""
#! >
#! <METAFILE_PARAMETER
#! NAME="ALLOW_DATASET_CONFLICT"
#! VALUE="YES"
#! />
#! </DATASET>
#! <DATASET
#! IS_SOURCE="false"
#! ROLE="WRITER"
#! FORMAT="CSV"
#! DATASET="$(DestDataset_CSV_7)"
#! KEYWORD="CSV_1"
#! MULTI_GEOM_ALLOWED="true"
#! ATTR_MAX_LENGTH="32"
#! ATTR_CASE="ANY"
#! ALLOWED_FEAT_TYPES=""
#! WRITE_DEFS="true"
#! DEFLINE_TEMPLATE="csv_append_mode INHERIT_FROM_WRITER csv_field_names INHERIT_FROM_WRITER"
#! DEFLINE_ATTRS="true"
#! EXPOSABLE_ATTRS="fme_type char(50) fme_text_string char(50) fme_feature_type char(50) fme_basename char(50) fme_geometry fme_char(50) fme_sweep_angle number(31,15) fme_rotation number(31,15) fme_secondary_axis number(31,15) fme_fill_color char(50) fme_dataset char(50) fme_primary_axis number(31,15) fme_start_angle number(31,15) fme_text_size number(31,15) fme_color char(50)"
#! DEFLINE_PARMS="&quot;GUI OPTIONAL CHOICE csv_append_mode INHERIT_FROM_WRITER%yes%no Append to file&quot; INHERIT_FROM_WRITER &quot;GUI OPTIONAL CHOICE csv_field_names INHERIT_FROM_WRITER%yes%no Output Field Names&quot; INHERIT_FROM_WRITER "
#! ATTR_INDEX_TYPES=""
#! ATTR_NAME_INVALID_CHARS=". %-#[]&quot;()!?*&apos;&amp;+\/"
#! SUPPORTS_FEATURE_TYPE_FANOUT="true"
#! ENABLED="true"
#! DYNAMIC_FEATURE_TYPES_LIST_ON_MERGE="true"
#! GENERATE_FME_BUILD_NUM="12238"
#! FANOUT_SUFFIX=""
#! FANOUT_ID_ATTR=""
#! COORDSYS=""
#! FANOUT="No"
#! FANOUT_DIRECTORY=""
#! FANOUT_PREFIX=""
#! >
#! <METAFILE_PARAMETER
#! NAME="MIME_TYPE"
#! VALUE="text/csv ADD_DISPOSITION"
#! />
#! <METAFILE_PARAMETER
#! NAME="ADVANCED_PARMS"
#! VALUE="_ENCODING CSV_OUT_ENCODING _WRITE_UTF8_BOM"
#! />
#! </DATASET>
#! </DATASETS>
#! <DATA_TYPES>
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="integer"
#! FME_TYPE="fme_int32"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="integer"
#! FME_TYPE="fme_uint32"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="integer"
#! FME_TYPE="fme_int64"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="integer"
#! FME_TYPE="fme_uint64"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="integer"
#! FME_TYPE="fme_int16"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="integer"
#! FME_TYPE="fme_uint16"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="integer"
#! FME_TYPE="fme_boolean"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text"
#! FME_TYPE="fme_buffer"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="blob"
#! FME_TYPE="fme_buffer"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text"
#! FME_TYPE="fme_datetime"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text"
#! FME_TYPE="fme_date"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="text"
#! FME_TYPE="fme_time"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="float"
#! FME_TYPE="fme_real64"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="float"
#! FME_TYPE="fme_real32"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="varchar(width)"
#! FME_TYPE="fme_varchar(width)"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="varchar(width)"
#! FME_TYPE="fme_char(width)"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="real(width,decimal)"
#! FME_TYPE="fme_decimal(width,decimal)"
#! FORMAT="SQLITE3"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(width)"
#! FME_TYPE="fme_varchar(width)"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(width)"
#! FME_TYPE="fme_char(width)"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(254)"
#! FME_TYPE="fme_buffer"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(20)"
#! FME_TYPE="fme_datetime"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(12)"
#! FME_TYPE="fme_time"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="char(8)"
#! FME_TYPE="fme_date"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(31,15)"
#! FME_TYPE="fme_real64"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(15,7)"
#! FME_TYPE="fme_real32"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_int32"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_uint32"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_int64"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(11,0)"
#! FME_TYPE="fme_uint64"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="logical"
#! FME_TYPE="fme_boolean"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(6,0)"
#! FME_TYPE="fme_int16"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(6,0)"
#! FME_TYPE="fme_uint16"
#! FORMAT="CSV"
#! />
#! <DATA_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="number(width,decimal)"
#! FME_TYPE="fme_decimal(width,decimal)"
#! FORMAT="CSV"
#! />
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_no_geom"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_point"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_line"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_area"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_text"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_ellipse"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_arc"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_rectangle"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_rounded_rectangle"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_collection"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_raster"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_surface"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_solid"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="true"
#! FORMAT_TYPE="db_none"
#! FME_TYPE="fme_point_cloud"
#! FORMAT="SQLITE3"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_no_geom"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_point"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_line"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_area"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_text"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_ellipse"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_arc"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_rectangle"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_rounded_rectangle"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="fme_no_map"
#! FME_TYPE="fme_no_geom"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="fme_no_map"
#! FME_TYPE="fme_no_map"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_collection"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_raster"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_surface"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_solid"
#! FORMAT="CSV"
#! />
#! <GEOM_TYPE
#! IS_SOURCE="false"
#! FORMAT_TYPE="csv_none"
#! FME_TYPE="fme_point_cloud"
#! FORMAT="CSV"
#! />
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! <FEATURE_TYPE
#! IS_SOURCE="true"
#! NODE_NAME="APC"
#! IS_EDITABLE="false"
#! IDENTIFIER="19"
#! FEAT_GEOMTYPE="db_none"
#! POSITION="102 -458"
#! ORDER="21"
#! COLLAPSED="true"
#! KEYWORD="SQLITE3_1"
#! ENABLED="true"
#! HIDDEN_USER_ATTRS=""
#! MERGE="false"
#! MERGE_FILTER=""
#! MERGE_FILTER_TYPE="FILTER_TYPE_GLOB"
#! MERGE_FILTER_CASE_SENSITIVE="true"
#! DYNAMIC_SCHEMA="false"
#! >
#! <FEAT_ATTRIBUTE ATTR_NAME="DATE" ATTR_TYPE="text"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="TIME" ATTR_TYPE="text"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="LAT" ATTR_TYPE="float"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="LON" ATTR_TYPE="float"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="BUS" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="DATASET" ATTR_TYPE="text"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="TIMESTAMP" ATTR_TYPE="integer"/>
#! <DEFLINE_PARM PARM_NAME="sqlite3_where_clause" PARM_VALUE=""/>
#! <DEFLINE_PARM PARM_NAME="sqlite3_sql_statement" PARM_VALUE=""/>
#! </FEATURE_TYPE>
#! <FEATURE_TYPE
#! IS_SOURCE="true"
#! NODE_NAME="GFI"
#! IS_EDITABLE="false"
#! IDENTIFIER="18"
#! FEAT_GEOMTYPE="db_none"
#! POSITION="56 -77"
#! ORDER="22"
#! COLLAPSED="true"
#! KEYWORD="SQLITE3_1"
#! ENABLED="false"
#! HIDDEN_USER_ATTRS=""
#! MERGE="false"
#! MERGE_FILTER=""
#! MERGE_FILTER_TYPE="FILTER_TYPE_GLOB"
#! MERGE_FILTER_CASE_SENSITIVE="true"
#! DYNAMIC_SCHEMA="false"
#! >
#! <FEAT_ATTRIBUTE ATTR_NAME="LOC_N" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="ID" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="SEQTR" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="SEQPPD" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="SEQMISC" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="TS" ATTR_TYPE="text"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="TYPE" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="BUS" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="ROUTE" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="N" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="SEQ" ATTR_TYPE="integer"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="DES" ATTR_TYPE="text"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="AMT" ATTR_TYPE="float"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="TIMESTAMP" ATTR_TYPE="integer"/>
#! <DEFLINE_PARM PARM_NAME="sqlite3_where_clause" PARM_VALUE=""/>
#! <DEFLINE_PARM PARM_NAME="sqlite3_sql_statement" PARM_VALUE=""/>
#! </FEATURE_TYPE>
#! <FEATURE_TYPE
#! IS_SOURCE="false"
#! NODE_NAME="noCoordinatesFound"
#! IS_EDITABLE="true"
#! IDENTIFIER="20"
#! FEAT_GEOMTYPE="&lt;NO_GEOMETRY&gt;"
#! POSITION="4132 -1666"
#! ORDER="26"
#! COLLAPSED="false"
#! KEYWORD="CSV_1"
#! ENABLED="true"
#! FANOUT="No"
#! FANOUT_ID_ATTR=""
#! >
#! <DEFLINE_PARM PARM_NAME="csv_append_mode" PARM_VALUE="INHERIT_FROM_WRITER"/>
#! <DEFLINE_PARM PARM_NAME="csv_field_names" PARM_VALUE="INHERIT_FROM_WRITER"/>
#! </FEATURE_TYPE>
#! <FEATURE_TYPE
#! IS_SOURCE="false"
#! NODE_NAME="added"
#! IS_EDITABLE="true"
#! IDENTIFIER="21"
#! FEAT_GEOMTYPE="&lt;NO_GEOMETRY&gt;"
#! POSITION="3035 -186"
#! ORDER="30"
#! COLLAPSED="false"
#! KEYWORD="CSV_1"
#! ENABLED="true"
#! FANOUT="No"
#! FANOUT_ID_ATTR=""
#! >
#! <FEAT_ATTRIBUTE ATTR_NAME="BUS" ATTR_TYPE="char(20)"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="TIMESTAMP" ATTR_TYPE="char(20)"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="ROUTE" ATTR_TYPE="char(20)"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="TS" ATTR_TYPE="char(20)"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="LAT" ATTR_TYPE="char(20)"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="LON" ATTR_TYPE="char(20)"/>
#! <FEAT_ATTRIBUTE ATTR_NAME="TYPE" ATTR_TYPE="char(20)"/>
#! <DEFLINE_PARM PARM_NAME="csv_append_mode" PARM_VALUE="INHERIT_FROM_WRITER"/>
#! <DEFLINE_PARM PARM_NAME="csv_field_names" PARM_VALUE="INHERIT_FROM_WRITER"/>
#! </FEATURE_TYPE>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI MULTIFILE SourceDataset_SQLITE3 SQLite3_Database_Files(*.sl3;*.db)|*.sl3;*.db|SQLite3_Database_Files(*.sl3)|*.sl3|SQLite3_Database_Files(*.db)|*.db|All_files(*.*)|*.* Source SQLite3 Database File(s):"
#! DEFAULT_VALUE="C:\AndrewRoss\Work\AR_Whistler\Data\whistlerData.db"
#! IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#! GUI_LINE="GUI DIRNAME DestDataset_CSV_7 Destination Comma Separated Value (CSV) Directory:"
#! DEFAULT_VALUE="C:\AndrewRoss\Work\AR_Whistler\Data"
#! IS_STAND_ALONE="false"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#! IDENTIFIER="30"
#! TYPE="AttributeRemover"
#! VERSION="0"
#! POSITION="72 -599"
#! ORDER="23"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover"/>
#! <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="DATE,TIME,DATASET"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="26"
#! TYPE="PythonCaller"
#! VERSION="3"
#! POSITION="3389 -1156"
#! ORDER="24"
#! PARMS_EDITED="true"
#! ENABLED="false"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="HAVECOORDINATES" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="NEW_ATTRIBUTES" PARM_VALUE="LAT LON HAVECOORDINATES"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="PythonCaller"/>
#! <XFORM_PARM PARM_NAME="PYTHONSYMBOL" PARM_VALUE="Interpolate.FMEInterpolatePoints"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PYTHONSOURCE" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="22"
#! TYPE="Tester"
#! VERSION="1"
#! POSITION="3358 -1415"
#! ORDER="25"
#! PARMS_EDITED="true"
#! ENABLED="false"
#! >
#! <OUTPUT_FEAT NAME="PASSED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="HAVECOORDINATES" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <OUTPUT_FEAT NAME="FAILED"/>
#! <FEAT_COLLAPSED COLLAPSED="1"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.LAT" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.LON" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.BUS" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="HAVECOORDINATES" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_PARM PARM_NAME="TEST_DESCRIPTION" PARM_VALUE="&quot;&quot;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester"/>
#! <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST &quot;@Value(HAVECOORDINATES)&quot; = &quot;1&quot;"/>
#! <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="AND"/>
#! <XFORM_PARM PARM_NAME="TEST_LIST" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="Automatic"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="17"
#! TYPE="SQLCreator"
#! VERSION="2"
#! POSITION="79 -224"
#! ORDER="27"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="RESULT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="ROUTE" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TYPE" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="FORMAT" PARM_VALUE="SQLITE3"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="SQLCreator"/>
#! <XFORM_PARM PARM_NAME="DATASET" PARM_VALUE="C:&lt;backslash&gt;AndrewRoss&lt;backslash&gt;Work&lt;backslash&gt;AR_Whistler&lt;backslash&gt;Data&lt;backslash&gt;whistlerData.db"/>
#! <XFORM_PARM PARM_NAME="SQL_STATEMENT" PARM_VALUE="select&lt;space&gt;*&lt;space&gt;from&lt;space&gt;GFI&lt;space&gt;where&lt;space&gt;GFI.BUS&lt;space&gt;in&lt;space&gt;V_APCBUS&lt;semicolon&gt;"/>
#! <XFORM_PARM PARM_NAME="COORDSYS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="EXPOSED_ATTRIBUTE_LIST" PARM_VALUE="BUS,ROUTE,TIMESTAMP,TS,TYPE"/>
#! <XFORM_PARM PARM_NAME="FORMAT_PARAMS" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="11"
#! TYPE="ClassicSQLExecutor"
#! VERSION="2"
#! POSITION="3413 -852"
#! ORDER="28"
#! PARMS_EDITED="true"
#! ENABLED="false"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="APC{}.BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="USE_SSPI" PARM_VALUE="No"/>
#! <XFORM_PARM PARM_NAME="USER" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="EXTRAATTRS" PARM_VALUE="TIMESTAMP,LAT,LON,BUS"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ClassicSQLExecutor"/>
#! <XFORM_PARM PARM_NAME="SERVER" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PORT" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PASS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="TIMEOUT" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="LISTNAME" PARM_VALUE="APC"/>
#! <XFORM_PARM PARM_NAME="SERVTYPE" PARM_VALUE="SQLITE3"/>
#! <XFORM_PARM PARM_NAME="SERVNAME" PARM_VALUE="C:\AndrewRoss\Work\AR_Whistler\Data\whistlerData.db"/>
#! <XFORM_PARM PARM_NAME="SQLSTATEMENT" PARM_VALUE="FME_SQL_DELIMITER ;&#10;select BUS,TIMESTAMP,LAT,LON,(TIMESTAMP - @Value(TIMESTAMP)) as MAX from APC where BUS=@Value(BUS) and TIMESTAMP &gt; @Value(TIMESTAMP) order by MAX limit 1;&#10;select BUS,TIMESTAMP,LAT,LON,(@Value(TIMESTAMP) - TIMESTAMP) as MIN from APC where BUS=@Value(BUS) and @Value(TIMESTAMP) &gt; TIMESTAMP order by MIN limit 1;&#10;&#10;"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="33"
#! TYPE="AttributeRemover"
#! VERSION="0"
#! POSITION="2274 -153"
#! ORDER="29"
#! PARMS_EDITED="true"
#! ENABLED="false"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE="APC&lt;opencurly&gt;&lt;closecurly&gt;.TIMESTAMP APC&lt;opencurly&gt;&lt;closecurly&gt;.BUS APC&lt;opencurly&gt;&lt;closecurly&gt;.LON APC&lt;opencurly&gt;&lt;closecurly&gt;.LAT APC&lt;opencurly&gt;&lt;closecurly&gt;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover_2"/>
#! <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="BUS_TIME,HAVECOORDINATES"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="42"
#! TYPE="Inspector"
#! VERSION="2"
#! POSITION="2182 -1304"
#! ORDER="31"
#! PARMS_EDITED="false"
#! ENABLED="true"
#! >
#! <XFORM_PARM PARM_NAME="RASTER_NUM_ROWS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_START_ROW" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_START_COL" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="FeatureMerger_2_COMPLETE"/>
#! <XFORM_PARM PARM_NAME="VECTOR_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_VISUALIZATION_OPTION" PARM_VALUE="No Reduction"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="THINNER_TYPE_DISPLAY" PARM_VALUE="No Thinning"/>
#! <XFORM_PARM PARM_NAME="TACKATTRS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="AREA_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_NUM_COLS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="THINNER_RATE" PARM_VALUE="1"/>
#! <XFORM_PARM PARM_NAME="PEN_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="POINTCLOUD_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="44"
#! TYPE="Inspector"
#! VERSION="2"
#! POSITION="2182 -1364"
#! ORDER="32"
#! PARMS_EDITED="false"
#! ENABLED="true"
#! >
#! <XFORM_PARM PARM_NAME="RASTER_NUM_ROWS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_START_ROW" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_START_COL" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="FeatureMerger_2_INCOMPLETE"/>
#! <XFORM_PARM PARM_NAME="VECTOR_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_VISUALIZATION_OPTION" PARM_VALUE="No Reduction"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="THINNER_TYPE_DISPLAY" PARM_VALUE="No Thinning"/>
#! <XFORM_PARM PARM_NAME="TACKATTRS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="AREA_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_NUM_COLS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="THINNER_RATE" PARM_VALUE="1"/>
#! <XFORM_PARM PARM_NAME="PEN_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="POINTCLOUD_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="28"
#! TYPE="2DPointReplacer"
#! VERSION="1"
#! POSITION="579 -659"
#! ORDER="33"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="POINT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="YVALATTR" PARM_VALUE="@Value(LAT)"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="2DPointReplacer"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PARAMETER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XVALATTR" PARM_VALUE="@Value(LON)"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="34"
#! TYPE="Reprojector"
#! VERSION="3"
#! POSITION="1086 -719"
#! ORDER="34"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="REPROJECTED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="DEST" PARM_VALUE="NAD83.BC/Albers"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="SOURCE" PARM_VALUE="LL"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Reprojector"/>
#! <XFORM_PARM PARM_NAME="RASTER_CELL_SIZE" PARM_VALUE="Preserve Cells"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="INTERPOLATION_TYPE_NAME" PARM_VALUE="Nearest Neighbor"/>
#! <XFORM_PARM PARM_NAME="STROKE_ARCS" PARM_VALUE="Yes"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="39"
#! TYPE="FeatureMerger"
#! VERSION="8"
#! POSITION="1410 -1161"
#! ORDER="35"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="COMPLETE"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="ROUTE" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TYPE" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="theGroupBy" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="DTACTUAL" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="e" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <OUTPUT_FEAT NAME="INCOMPLETE"/>
#! <FEAT_COLLAPSED COLLAPSED="1"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="ROUTE" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="TS" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="TYPE" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <OUTPUT_FEAT NAME="EMPTY"/>
#! <FEAT_COLLAPSED COLLAPSED="2"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="2"/>
#! <XFORM_ATTR ATTR_NAME="ROUTE" IS_USER_CREATED="false" FEAT_INDEX="2"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="2"/>
#! <XFORM_ATTR ATTR_NAME="TS" IS_USER_CREATED="false" FEAT_INDEX="2"/>
#! <XFORM_ATTR ATTR_NAME="TYPE" IS_USER_CREATED="false" FEAT_INDEX="2"/>
#! <OUTPUT_FEAT NAME="REFERENCED"/>
#! <FEAT_COLLAPSED COLLAPSED="3"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="3"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="3"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="3"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="3"/>
#! <XFORM_ATTR ATTR_NAME="theGroupBy" IS_USER_CREATED="false" FEAT_INDEX="3"/>
#! <XFORM_ATTR ATTR_NAME="DTACTUAL" IS_USER_CREATED="false" FEAT_INDEX="3"/>
#! <XFORM_ATTR ATTR_NAME="e" IS_USER_CREATED="false" FEAT_INDEX="3"/>
#! <OUTPUT_FEAT NAME="UNREFERENCED"/>
#! <FEAT_COLLAPSED COLLAPSED="4"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="4"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="4"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="4"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="4"/>
#! <XFORM_ATTR ATTR_NAME="theGroupBy" IS_USER_CREATED="false" FEAT_INDEX="4"/>
#! <XFORM_ATTR ATTR_NAME="DTACTUAL" IS_USER_CREATED="false" FEAT_INDEX="4"/>
#! <XFORM_ATTR ATTR_NAME="e" IS_USER_CREATED="false" FEAT_INDEX="4"/>
#! <OUTPUT_FEAT NAME="DUPLICATE_SUPPLIER"/>
#! <FEAT_COLLAPSED COLLAPSED="5"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="5"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="5"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="5"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="5"/>
#! <XFORM_ATTR ATTR_NAME="theGroupBy" IS_USER_CREATED="false" FEAT_INDEX="5"/>
#! <XFORM_ATTR ATTR_NAME="DTACTUAL" IS_USER_CREATED="false" FEAT_INDEX="5"/>
#! <XFORM_ATTR ATTR_NAME="e" IS_USER_CREATED="false" FEAT_INDEX="5"/>
#! <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE="BUS"/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="LIST_NAME" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="REFEEATTR" PARM_VALUE="e"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="FeatureMerger_2"/>
#! <XFORM_PARM PARM_NAME="MERGE_TYPE" PARM_VALUE="Attributes Only"/>
#! <XFORM_PARM PARM_NAME="PROCESS_DUPS" PARM_VALUE="No"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="BUILD_INCOMPLETE" PARM_VALUE="No"/>
#! <XFORM_PARM PARM_NAME="REFERATTR" PARM_VALUE="TIMESTAMP"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="46"
#! TYPE="Sampler"
#! VERSION="1"
#! POSITION="1634 -620"
#! ORDER="36"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="SAMPLED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <OUTPUT_FEAT NAME="NOT_SAMPLED"/>
#! <FEAT_COLLAPSED COLLAPSED="1"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Sampler"/>
#! <XFORM_PARM PARM_NAME="RATE" PARM_VALUE="3"/>
#! <XFORM_PARM PARM_NAME="SAMPLE_TYPE_LONG" PARM_VALUE="First N Features"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="48"
#! TYPE="Sampler"
#! VERSION="1"
#! POSITION="916 -127"
#! ORDER="37"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="SAMPLED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="ROUTE" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TYPE" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <OUTPUT_FEAT NAME="NOT_SAMPLED"/>
#! <FEAT_COLLAPSED COLLAPSED="1"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="ROUTE" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="TS" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="TYPE" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Sampler_2"/>
#! <XFORM_PARM PARM_NAME="RATE" PARM_VALUE="3"/>
#! <XFORM_PARM PARM_NAME="SAMPLE_TYPE_LONG" PARM_VALUE="First N Features"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="50"
#! TYPE="Inspector"
#! VERSION="2"
#! POSITION="1688 -210"
#! ORDER="38"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <XFORM_PARM PARM_NAME="RASTER_NUM_ROWS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_START_ROW" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_START_COL" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="gfi"/>
#! <XFORM_PARM PARM_NAME="VECTOR_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_VISUALIZATION_OPTION" PARM_VALUE="No Reduction"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="THINNER_TYPE_DISPLAY" PARM_VALUE="No Thinning"/>
#! <XFORM_PARM PARM_NAME="TACKATTRS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="AREA_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_NUM_COLS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="THINNER_RATE" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="PEN_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="POINTCLOUD_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="52"
#! TYPE="Inspector"
#! VERSION="2"
#! POSITION="2287 -694"
#! ORDER="39"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <XFORM_PARM PARM_NAME="RASTER_NUM_ROWS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_START_ROW" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_START_COL" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="apc"/>
#! <XFORM_PARM PARM_NAME="VECTOR_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_VISUALIZATION_OPTION" PARM_VALUE="No Reduction"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="THINNER_TYPE_DISPLAY" PARM_VALUE="No Thinning"/>
#! <XFORM_PARM PARM_NAME="TACKATTRS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="AREA_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_NUM_COLS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="THINNER_RATE" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="PEN_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="POINTCLOUD_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="55"
#! TYPE="Inspector"
#! VERSION="2"
#! POSITION="913 -2091"
#! ORDER="40"
#! PARMS_EDITED="false"
#! ENABLED="true"
#! >
#! <XFORM_PARM PARM_NAME="RASTER_NUM_ROWS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_START_ROW" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="RASTER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_START_COL" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="apc_2"/>
#! <XFORM_PARM PARM_NAME="VECTOR_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_VISUALIZATION_OPTION" PARM_VALUE="No Reduction"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="THINNER_TYPE_DISPLAY" PARM_VALUE="No Thinning"/>
#! <XFORM_PARM PARM_NAME="TACKATTRS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="AREA_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="RASTER_NUM_COLS" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="THINNER_RATE" PARM_VALUE="&lt;Unused&gt;"/>
#! <XFORM_PARM PARM_NAME="PEN_COLOR" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="POINTCLOUD_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="54"
#! TYPE="Sampler"
#! VERSION="1"
#! POSITION="260 -2017"
#! ORDER="41"
#! PARMS_EDITED="false"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="SAMPLED"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="e" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="DTACTUAL" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="theGroupBy" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <OUTPUT_FEAT NAME="NOT_SAMPLED"/>
#! <FEAT_COLLAPSED COLLAPSED="1"/>
#! <XFORM_ATTR ATTR_NAME="e" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="DTACTUAL" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="theGroupBy" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_PARM PARM_NAME="GROUP_BY" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Sampler_3"/>
#! <XFORM_PARM PARM_NAME="RATE" PARM_VALUE="3"/>
#! <XFORM_PARM PARM_NAME="SAMPLE_TYPE_LONG" PARM_VALUE="First N Features"/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="37"
#! TYPE="FillGPSgaps"
#! VERSION="0"
#! POSITION="174 -1127"
#! ORDER="42"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="ORIGINAL"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="theGroupBy" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="DTACTUAL" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <OUTPUT_FEAT NAME="NEW"/>
#! <FEAT_COLLAPSED COLLAPSED="1"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="theGroupBy" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="e" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_ATTR ATTR_NAME="DTACTUAL" IS_USER_CREATED="false" FEAT_INDEX="1"/>
#! <XFORM_PARM PARM_NAME="Param122" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;BUS&lt;closeparen&gt;"/>
#! <XFORM_PARM PARM_NAME="inputline" PARM_VALUE="&lt;at&gt;Value&lt;openparen&gt;TIMESTAMP&lt;closeparen&gt;"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="FillGPSgaps"/>
#! <XFORM_PARM PARM_NAME="__COMPOUND_PARAMETERS" PARM_VALUE=""/>
#! <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#! IDENTIFIER="58"
#! TYPE="AttributeRenamer"
#! VERSION="2"
#! POSITION="756 -1394"
#! ORDER="43"
#! PARMS_EDITED="true"
#! ENABLED="true"
#! >
#! <OUTPUT_FEAT NAME="OUTPUT"/>
#! <FEAT_COLLAPSED COLLAPSED="0"/>
#! <XFORM_ATTR ATTR_NAME="LAT" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="LON" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="BUS" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="TIMESTAMP" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="e" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_ATTR ATTR_NAME="DTACTUAL" IS_USER_CREATED="false" FEAT_INDEX="0"/>
#! <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRenamer"/>
#! <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="theGroupBy,BUS,&quot;&quot;"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#! IDENTIFIER="27"
#! SOURCE_NODE="11"
#! TARGET_NODE="26"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="31"
#! SOURCE_NODE="19"
#! TARGET_NODE="30"
#! SOURCE_PORT_DESC="-1"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="23"
#! SOURCE_NODE="26"
#! TARGET_NODE="22"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="24"
#! SOURCE_NODE="22"
#! TARGET_NODE="20"
#! SOURCE_PORT_DESC="fo 1"
#! TARGET_PORT_DESC="-1"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="25"
#! SOURCE_NODE="22"
#! TARGET_NODE="33"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="29"
#! SOURCE_NODE="33"
#! TARGET_NODE="21"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="-1"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="43"
#! SOURCE_NODE="39"
#! TARGET_NODE="42"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="45"
#! SOURCE_NODE="39"
#! TARGET_NODE="44"
#! SOURCE_PORT_DESC="fo 1"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="32"
#! SOURCE_NODE="30"
#! TARGET_NODE="28"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="35"
#! SOURCE_NODE="28"
#! TARGET_NODE="34"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="41"
#! SOURCE_NODE="17"
#! TARGET_NODE="39"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="47"
#! SOURCE_NODE="34"
#! TARGET_NODE="46"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="49"
#! SOURCE_NODE="17"
#! TARGET_NODE="48"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="51"
#! SOURCE_NODE="48"
#! TARGET_NODE="50"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="53"
#! SOURCE_NODE="46"
#! TARGET_NODE="52"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="56"
#! SOURCE_NODE="54"
#! TARGET_NODE="55"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="38"
#! SOURCE_NODE="37"
#! TARGET_NODE="39"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 1"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="57"
#! SOURCE_NODE="34"
#! TARGET_NODE="37"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="59"
#! SOURCE_NODE="37"
#! TARGET_NODE="58"
#! SOURCE_PORT_DESC="fo 1"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="60"
#! SOURCE_NODE="58"
#! TARGET_NODE="39"
#! SOURCE_PORT_DESC="fo 0"
#! TARGET_PORT_DESC="fi 1"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#! IDENTIFIER="61"
#! SOURCE_NODE="37"
#! TARGET_NODE="54"
#! SOURCE_PORT_DESC="fo 1"
#! TARGET_PORT_DESC="fi 0"
#! ENABLED="true"
#! EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </WORKSPACE>
#! 
GUI IGNORE SourceDataset_SQLITE3_1,DestDataset_CSV_1,CSV_OUT_APPEND_CSV_1,CSV_OUT_FIELD_NAMES_CSV_1,CSV_OUT_SEPARATOR_CSV_1,CSV_OUT_EXTENSION_CSV_1,_OUT_QUOTE_OUTPUT_CSV_1,_QUOTE_FIELD_NAMES_CSV_1,CSV_OUT_ENCODING_CSV_1,CSV_OUT_END_OF_LINE_CSV_1,_WRITE_UTF8_BOM_CSV_1


DEFAULT_MACRO SourceDataset_SQLITE3 C:\AndrewRoss\Work\AR_Whistler\Data\whistlerData.db
GUI MULTIFILE SourceDataset_SQLITE3 SQLite3_Database_Files(*.sl3;*.db)|*.sl3;*.db|SQLite3_Database_Files(*.sl3)|*.sl3|SQLite3_Database_Files(*.db)|*.db|All_files(*.*)|*.* Source SQLite3 Database File(s):
DEFAULT_MACRO DestDataset_CSV_7 C:\AndrewRoss\Work\AR_Whistler\Data
GUI DIRNAME DestDataset_CSV_7 Destination Comma Separated Value (CSV) Directory:
INCLUDE TCL
proc __FME_ExpandMacros {text {maxlevels 100}} {
   if { $maxlevels <= 0 } { return $text; }
   set pattern [join {{\$} {\([^()$]*\)}} {}]
   set indices [regexp -inline -all -indices $pattern $text]
   if [llength $indices] {
      foreach pair [lreverse $indices] {
         lassign $pair start end
         set replacement {}
         set replacement $::FME_MacroValues([string range $text [expr $start + 2] [expr $end - 1]])
         set text [string replace $text $start $end $replacement]
      }
      return [__FME_ExpandMacros $text [expr $maxlevels - 1]]
   }
   return $text
}

proc __FME_ExpandEnvVars {text {maxlevels 100}} {
   if { $maxlevels <= 0 } { return $text; }
   set pattern [join {{\$} {\{[^\{\}$]*\}}} {}]
   set indices [regexp -inline -all -indices $pattern $text]
   if [llength $indices] {
      foreach pair [lreverse $indices] {
         lassign $pair start end
         set replacement {}
         set replacement $::env([string range $text [expr $start + 2] [expr $end - 1]])
         set text [string replace $text $start $end $replacement]
      }
      return [__FME_ExpandEnvVars $text [expr $maxlevels - 1]]
   }
   return $text
}

proc __FME_EvalAndEncodeMacro {macroName} {
   set macroVal {}
   catch { set macroVal [__FME_ExpandMacros $::FME_MacroValues($macroName)] }
   catch { set macroVal [__FME_ExpandEnvVars $macroVal] }
   return [FME_EncodeText $macroVal]
}
END_INCLUDE
INCLUDE [	puts "MACRO SourceDataset_SQLITE3__FMEENCODED__ [__FME_EvalAndEncodeMacro SourceDataset_SQLITE3]" ;   ]

INCLUDE [	puts "MACRO DestDataset_CSV_7__FMEENCODED__ [__FME_EvalAndEncodeMacro DestDataset_CSV_7]" ;   ]

INCLUDE [ if {{$(SourceDataset_SQLITE3)} == {}} { puts_real {Parameter 'SourceDataset_SQLITE3' must be given a value.}; exit 1; }; ]
INCLUDE [ if {{$(DestDataset_CSV_7)} == {}} { puts_real {Parameter 'DestDataset_CSV_7' must be given a value.}; exit 1; }; ]
#! START_HEADER
#! START_WB_HEADER
READER_TYPE SQLITE3
READER_KEYWORD SQLITE3_1
READER_GEN_DIRECTIVES TABLELIST,,_MERGE_SCHEMAS,YES,SQLITE3_EXPOSE_FORMAT_ATTRS,
WRITER_TYPE CSV
WRITER_KEYWORD CSV_1
#! END_WB_HEADER
#! START_WB_HEADER
MACRO WB_KEYWORD "SQLITE3_1"
#! END_WB_HEADER
#! START_SOURCE_HEADER SQLITE3 SQLITE3_1
# ============================================================================
# First get the dataset for the database. For SQLite3, it's the database file.
# For now we'll use whatever they had when they generated this mapping file,
# and not reprompt
# The dataset this mapping file was generated from was:
#! END_SOURCE_HEADER
#! START_WB_HEADER
DEFAULT_MACRO SourceDataset
INCLUDE [ if {{$(SourceDataset)} != ""} {                        \
 puts {DEFAULT_MACRO SourceDataset_SQLITE3_1 $(SourceDataset)}     \
 } ]
#! END_WB_HEADER
#! START_SOURCE_HEADER SQLITE3 SQLITE3_1
DEFAULT_MACRO SourceDataset_SQLITE3_1 $(SourceDataset_SQLITE3)
GUI MULTIFILE SourceDataset_SQLITE3_1 SQLite3_Database_Files(*.sl3;*.db)|*.sl3;*.db|SQLite3_Database_Files(*.sl3)|*.sl3|SQLite3_Database_Files(*.db)|*.db|All_files(*.*)|*.* Source SQLite3 Database File(s):
SQLITE3_1_DATASET "$(SourceDataset_SQLITE3_1)"
#! END_SOURCE_HEADER
#! START_WB_HEADER
MACRO WB_KEYWORD "CSV_1"
#! END_WB_HEADER
#! START_DEST_HEADER CSV CSV_1
# ============================================================================
# The following GUI line prompts for a directory where the
# CSV files will be stored
#! END_DEST_HEADER
#! START_WB_HEADER
DEFAULT_MACRO DestDataset
INCLUDE [ if {"$(DestDataset)" != ""} {                          \
 puts {DEFAULT_MACRO DestDataset_CSV_1 $(DestDataset)}         \
 } ]
#! END_WB_HEADER
#! START_DEST_HEADER CSV CSV_1
DEFAULT_MACRO DestDataset_CSV_1 $(DestDataset_CSV_7)
GUI DIRNAME DestDataset_CSV_1 Destination Comma Separated Value (CSV) Directory:
CSV_1_PLUGIN_MAX_CHANNELS 100
# =====================================================================
# Allows one to append
DEFAULT_MACRO CSV_OUT_APPEND_CSV_1 No
CSV_1_APPEND "$(CSV_OUT_APPEND_CSV_1)"
GUI CHECKBOX CSV_OUT_APPEND_CSV_1 Yes%No Append to File
# ============================================================================
# The following determines whether field names will be written on
# the first row of the file.
DEFAULT_MACRO CSV_OUT_FIELD_NAMES_CSV_1 yes
CSV_1_FIELD_NAMES "$(CSV_OUT_FIELD_NAMES_CSV_1)"
GUI CHECKBOX CSV_OUT_FIELD_NAMES_CSV_1 yes%no Output Field Names on First Line
# ============================================================================
# The following determines the field seperator
# PR#19714 Changed GUI LOOKUP to STRING_OR_CHOICE for showing space and tab
# as explicit delimiters for parsing issues and symmetry with the reader.
DEFAULT_MACRO CSV_OUT_SEPARATOR_CSV_1 ,
CSV_1_SEPARATOR "$(CSV_OUT_SEPARATOR_CSV_1)"
GUI OPTIONAL STRING_OR_CHOICE CSV_OUT_SEPARATOR_CSV_1 ,%;%|%space%tab Separator Character:
# ============================================================================
# The following determines the extension for output CSV files
DEFAULT_MACRO CSV_OUT_EXTENSION_CSV_1 csv
CSV_1_EXTENSION "$(CSV_OUT_EXTENSION_CSV_1)"
GUI OPTIONAL TEXT CSV_OUT_EXTENSION_CSV_1 Extension:
# ============================================================================
# The following specifies if output values should be quoted
DEFAULT_MACRO _OUT_QUOTE_OUTPUT_CSV_1 if_needed
GUI CHOICE _OUT_QUOTE_OUTPUT_CSV_1 yes%if_needed%no Quote Output Values:
CSV_1_QUOTE_OUTPUT $(_OUT_QUOTE_OUTPUT_CSV_1)
# ============================================================================
# The following choice determines if field names on the first row
# should be quoted or not.
DEFAULT_MACRO _QUOTE_FIELD_NAMES_CSV_1 no
GUI CHOICE _QUOTE_FIELD_NAMES_CSV_1 yes%no Quote Field Names:
CSV_1_QUOTE_FIELD_NAMES $(_QUOTE_FIELD_NAMES_CSV_1)
# =====================================================================
# Allows to set one of the character encodings for output file
DEFAULT_MACRO CSV_OUT_ENCODING_CSV_1 
GUI OPTIONAL STRING_OR_CHOICE CSV_OUT_ENCODING_CSV_1 UTF-8%UTF-16LE%UTF-16BE%ANSI%BIG5%SJIS%CP437%CP708%CP720%CP737%CP775%CP850%CP852%CP855%CP857%CP860%CP861%CP862%CP863%CP864%CP865%CP866%CP869%CP932%CP936%CP950%CP1250%CP1251%CP1252%CP1253%CP1254%CP1255%CP1256%CP1257%CP1258%ISO8859-1%ISO8859-2%ISO8859-3%ISO8859-4%ISO8859-5%ISO8859-6%ISO8859-7%ISO8859-8%ISO8859-9%ISO8859-13%ISO8859-15 Character Encoding:
CSV_1_ENCODING $(CSV_OUT_ENCODING_CSV_1)
# =====================================================================
# Allows to set Line termination type
DEFAULT_MACRO CSV_OUT_END_OF_LINE_CSV_1 
GUI OPTIONAL CHOICE CSV_OUT_END_OF_LINE_CSV_1 Windows%Unix%Macintosh Line Termination:
CSV_1_END_OF_LINE $(CSV_OUT_END_OF_LINE_CSV_1)
# ============================================================================
# PR 15909
# The following choice determines if the byte order mark should be written
# when using UTF-8 encoding. By default BOM is written, so _WRITE_UTF8_BOM should be yes.
DEFAULT_MACRO _WRITE_UTF8_BOM_CSV_1 yes
GUI CHOICE _WRITE_UTF8_BOM_CSV_1 yes%no Write UTF-8 Byte Order Mark
CSV_1_WRITE_UTF8_BOM $(_WRITE_UTF8_BOM_CSV_1)
CSV_1_DATASET "$(DestDataset_CSV_1)"
#! END_DEST_HEADER
#! END_HEADER

LOG_FILENAME "$(FME_MF_DIR)matchGFI.log"
LOG_APPEND NO
LOG_MAX_FEATURES 200
LOG_MAX_RECORDED_FEATURES 200
FME_REPROJECTION_ENGINE FME
FME_GEOMETRY_HANDLING Enhanced
FME_STROKE_MAX_DEVIATION 0
LOG_FILTER_MASK -1
DEFAULT_MACRO DATASET_KEYWORD_SQLITE3_1 SQLITE3_1
DEFAULT_MACRO DATASET_KEYWORD_CSV_1 CSV_1
# -------------------------------------------------------------------------

SQLITE3_1_READER_META_ATTRIBUTES fme_feature_type

# -------------------------------------------------------------------------

MULTI_READER_CONTINUE_ON_READER_FAILURE No

# -------------------------------------------------------------------------

MACRO WORKSPACE_NAME matchGFI
MACRO FME_VIEWER_APP fmeview
# -------------------------------------------------------------------------

INCLUDE [ if {[info exists env(TEMP)]}  {set gVisualizerTemp $env(TEMP)}  elseif { $tcl_platform(platform) == "unix" } {set gVisualizerTemp "/tmp"} else {set gVisualizerTemp c:};  regsub -all {[ ,&]} {$(WORKSPACE_NAME)} {_} wsname; set gVisualizerTemp $gVisualizerTemp/${wsname}_[clock format [clock seconds] -format %H%M%S];  puts "MACRO WORKSPACE_TEMP_DIR $gVisualizerTemp"; 
MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/inspector.ffs
MACRO VISUALIZER_CREATE_SPATIAL_INDEX YES
# -------------------------------------------------------------------------
SQLITE3_1_DEF APC   sqlite3_sql_statement        ""   sqlite3_where_clause         ""   DATE                         text   TIME                         text   LAT                          float   LON                          float   BUS                          integer   DATASET                      text   TIMESTAMP                    integer
# -------------------------------------------------------------------------

# -------------------------------------------------------------------------

Lookup ___KnownFeatureTypes___   APC yes   "" no
# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory   FACTORY_NAME "Unexpected Input Remover"   INPUT FEATURE_TYPE *   TEST @Lookup(___KnownFeatureTypes___,@FeatureType()) == yes   OUTPUT PASSED FEATURE_TYPE *
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME "Source -> Generic"    INPUT FEATURE_TYPE *    OUTPUT FEATURE_TYPE *       @Transform(SQLITE3,FME_GENERIC,PRESERVE_GEOMETRY)
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME "GFI (SQLITE3_1) Splitter"    INPUT FEATURE_TYPE GFI
DEFAULT_MACRO WB_CURRENT_CONTEXT
# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO AttributeRemover_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "{\[0-9\]+}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME AttributeRemover    INPUT  FEATURE_TYPE APC    OUTPUT FEATURE_TYPE AttributeRemover_OUTPUT        @RemoveAttributes(DATE,TIME,DATASET)        @RemoveAttributes(fme_regexp_match"$(AttributeRemover_LIST_EXP)")

# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory    FACTORY_NAME 2DPointReplacer    INPUT  FEATURE_TYPE AttributeRemover_OUTPUT    TEST &fme_type = fme_text    OUTPUT PASSED FEATURE_TYPE 2DPointReplacer_POINT         @XValue("@Value(LON)",RESET)         @YValue("@Value(LAT)")         @Dimension(2)    OUTPUT FAILED FEATURE_TYPE 2DPointReplacer_POINT         @XValue("@Value(LON)",RESET)         @YValue("@Value(LAT)")         @Dimension(2)         @GeometryType(fme_point)

# -------------------------------------------------------------------------

# Wipe out the source setting if it was untouched from the default setting

DEFAULT_MACRO Reprojector_SOURCE LL
INCLUDE [if { {LL} == {Read from feature} } {             puts {MACRO Reprojector_SOURCE}          }         ]
FACTORY_DEF * TeeFactory    FACTORY_NAME Reprojector    INPUT  FEATURE_TYPE 2DPointReplacer_POINT    OUTPUT FEATURE_TYPE Reprojector_REPROJECTED         @Reproject($(Reprojector_SOURCE),NAD83.BC/Albers,NearestNeighbor,PreserveCells)

FACTORY_DEF * TeeFactory   FACTORY_NAME "Reprojector REPROJECTED Splitter"   INPUT FEATURE_TYPE Reprojector_REPROJECTED   OUTPUT FEATURE_TYPE Reprojector_REPROJECTED_0   OUTPUT FEATURE_TYPE Reprojector_REPROJECTED_1
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "FillGPSgaps INPUT Input Collector"   INPUT FEATURE_TYPE Reprojector_REPROJECTED_1   OUTPUT FEATURE_TYPE FillGPSgaps_INPUT
MACRO FillGPSgaps_WORKSPACE_NAME FillGPSgaps
MACRO $(FillGPSgaps_WORKSPACE_NAME)_XFORMER_NAME FillGPSgaps
MACRO $(FillGPSgaps_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(FillGPSgaps_WORKSPACE_NAME)___COMPOUND_PARAMETERS 
MACRO $(FillGPSgaps_WORKSPACE_NAME)_inputline <at>Value<openparen>TIMESTAMP<closeparen>
MACRO $(FillGPSgaps_WORKSPACE_NAME)_Param122 <at>Value<openparen>BUS<closeparen>





INCLUDE TCL
proc __FME_ExpandMacros {text {maxlevels 100}} {
   if { $maxlevels <= 0 } { return $text; }
   set pattern [join {{\$} {\([^()$]*\)}} {}]
   set indices [regexp -inline -all -indices $pattern $text]
   if [llength $indices] {
      foreach pair [lreverse $indices] {
         lassign $pair start end
         set replacement {}
         set replacement $::FME_MacroValues([string range $text [expr $start + 2] [expr $end - 1]])
         set text [string replace $text $start $end $replacement]
      }
      return [__FME_ExpandMacros $text [expr $maxlevels - 1]]
   }
   return $text
}

proc __FME_ExpandEnvVars {text {maxlevels 100}} {
   if { $maxlevels <= 0 } { return $text; }
   set pattern [join {{\$} {\{[^\{\}$]*\}}} {}]
   set indices [regexp -inline -all -indices $pattern $text]
   if [llength $indices] {
      foreach pair [lreverse $indices] {
         lassign $pair start end
         set replacement {}
         set replacement $::env([string range $text [expr $start + 2] [expr $end - 1]])
         set text [string replace $text $start $end $replacement]
      }
      return [__FME_ExpandEnvVars $text [expr $maxlevels - 1]]
   }
   return $text
}

proc __FME_EvalAndEncodeMacro {macroName} {
   set macroVal {}
   catch { set macroVal [__FME_ExpandMacros $::FME_MacroValues($macroName)] }
   catch { set macroVal [__FME_ExpandEnvVars $macroVal] }
   return [FME_EncodeText $macroVal]
}
END_INCLUDE
INCLUDE [	puts "MACRO $(FillGPSgaps_WORKSPACE_NAME)_XFORMER_NAME__FMEENCODED__ [__FME_EvalAndEncodeMacro $(FillGPSgaps_WORKSPACE_NAME)_XFORMER_NAME]" ;   ]

INCLUDE [	puts "MACRO $(FillGPSgaps_WORKSPACE_NAME)_TRANSFORMER_GROUP__FMEENCODED__ [__FME_EvalAndEncodeMacro $(FillGPSgaps_WORKSPACE_NAME)_TRANSFORMER_GROUP]" ;   ]

INCLUDE [	puts "MACRO $(FillGPSgaps_WORKSPACE_NAME)___COMPOUND_PARAMETERS__FMEENCODED__ [__FME_EvalAndEncodeMacro $(FillGPSgaps_WORKSPACE_NAME)___COMPOUND_PARAMETERS]" ;   ]

INCLUDE [ ]

INCLUDE [ ]

INCLUDE_CUSTOM_TRANSFORMER FillGPSgaps
FACTORY_DEF * TeeFactory   FACTORY_NAME "FillGPSgaps ORIGINAL Output Renamer/Nuker"   INPUT FEATURE_TYPE FillGPSgaps_ORIGINAL   OUTPUT FEATURE_TYPE FillGPSgaps_ORIGINAL
FACTORY_DEF * TeeFactory   FACTORY_NAME "FillGPSgaps NEW Output Renamer/Nuker"   INPUT FEATURE_TYPE FillGPSgaps_NEW   OUTPUT FEATURE_TYPE FillGPSgaps_NEW
FACTORY_DEF * TeeFactory   FACTORY_NAME "FillGPSgaps NEW Splitter"   INPUT FEATURE_TYPE FillGPSgaps_NEW   OUTPUT FEATURE_TYPE FillGPSgaps_NEW_0   OUTPUT FEATURE_TYPE FillGPSgaps_NEW_1
# -------------------------------------------------------------------------

INCLUDE [ puts "MACRO REAL_RATE [expr 3 * -1 ]" ]
FACTORY_DEF * SamplingFactory    FACTORY_NAME Sampler_3    SAMPLE_RATE $(REAL_RATE)    INPUT  FEATURE_TYPE FillGPSgaps_NEW_1    OUTPUT SAMPLED FEATURE_TYPE ___SAMPLED___
# This TeeFactory is needed because Sampler will still output features if it has no OUTPUT clauses specified.
# This way we behave nicely even if there are no output connections on the transformer. See PR#28886.

FACTORY_DEF * TeeFactory    FACTORY_NAME Sampler_3_Sampled    INPUT FEATURE_TYPE ___SAMPLED___    OUTPUT FEATURE_TYPE Sampler_3_SAMPLED


# -------------------------------------------------------------------------

# Set the directive to add all the meta-attributes to the features.
# We do this so users see all possible information in the viewed
# features.

READER_META_ATTRIBUTES fme_feature_type fme_dataset fme_basename
# Assumption is that the workspace temp dir has been already set and created.  See controldefs.cpp - ControlDefs::writeVisualizerTempDir
DEFAULT_MACRO WORKSPACE_TEMP_DIR
INCLUDE [         if { [string length {}] > 0 } {             set catter "" ;             set comma "" ;             foreach attr {} {                 set catter "$catter$comma@Value(\"$attr\")" ;                 set comma ",_," ;             } ;             puts "MACRO CATMAC _@Concatenate($catter)" ;         }         else {             puts "MACRO CATMAC " ;         };         set safeName "[regsub -all {[^a-zA-Z0-9]} {apc_2} _]_[expr round(rand() * 1000000)]_[clock clicks  -milliseconds]";         puts "MACRO SAFE_FFS_NAME $safeName";         ]
# Make the temporary directory that the FFS files will live in.
FACTORY_DEF * CreationFactory      FACTORY_NAME apc_2_DirCreator      OUTPUT FEATURE_TYPE __nukeme__          @Tcl2("catch {file mkdir {$(WORKSPACE_TEMP_DIR)}}")
FACTORY_DEF * TeeFactory    FACTORY_NAME apc_2_DirCreatorCleanerUpper    INPUT FEATURE_TYPE __nukeme__
# Send raster, point cloud and vector features down different paths to prepare
# them for viewing

FACTORY_DEF * TestFactory    FACTORY_NAME apc_2_FeatureDirector    INPUT  FEATURE_TYPE Sampler_3_SAMPLED    TEST &fme_type == "fme_raster"    OUTPUT FAILED FEATURE_TYPE apc_2___NotRasterFeatures___    OUTPUT PASSED FEATURE_TYPE apc_2___RasterFeatures___
FACTORY_DEF * TestFactory    FACTORY_NAME apc_2___FeatureDirector1    INPUT FEATURE_TYPE apc_2___NotRasterFeatures___    TEST &fme_type == "fme_point_cloud"    OUTPUT FAILED FEATURE_TYPE apc_2___VectorFeatures___    OUTPUT PASSED FEATURE_TYPE apc_2___PointCloudFeatures___
# Vector features simply may get their colors overridden

FACTORY_DEF * TeeFactory    FACTORY_NAME apc_2_VectorSetterUpper    INPUT FEATURE_TYPE apc_2___VectorFeatures___    OUTPUT FEATURE_TYPE __viewme__
# Point Cloud Features Might Need to be thinned

# Note that we don't call the ThinPointCloud function directly, but rather
# do it through TCL. This should allow this transformer to be used with a
# Desktop license, even though ThinPointCloud requires Professional.

Tcl2 proc 602be46c_aaf8_4139_a6d8_2e0623a1f41d0_thinPointCloud {} {    FME_Execute ThinPointCloud NO_THINNING <Unused>; }
FACTORY_DEF * TeeFactory    FACTORY_NAME apc_2___PointCloudThinner    INPUT FEATURE_TYPE apc_2___PointCloudFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("602be46c_aaf8_4139_a6d8_2e0623a1f41d0_thinPointCloud")
Tcl2 proc 602be46c_aaf8_4139_a6d8_2e0623a1f41d0_prepareRaster {subsetStartRow subsetNumRows subsetStartCol subsetNumCols} {    set useDI [string equal -nocase {$(FME_VIEWER_APP)} {fmedatainspector}];    if {!$useDI} {       FME_Execute ApplyRasterRotation BILINEAR;    };    set doResample [string equal {NoReduction} {Resample}];    set doSubset [string equal {NoReduction} {Subset}];    set doBounds [string equal {NoReduction} {BoundingBoxOnly}];    if {$doBounds}  {       FME_Execute GeometryType fme_polygon;    }    elseif {$doResample || $doSubset} {       set comment {          First, we need to prefix all the attributes. This is done because          we are going to call @RasterProperties, and we want to make sure          it doesn't overwrite any existing attributes.       };       set kAttrPrefix ".";       set allNames [FME_AttributeNames];       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $newName $oldName;       };       FME_Execute RasterProperties RASTER;       if {$doResample} {          set oldNumCols [FME_GetAttribute _num_columns];          set oldNumRows [FME_GetAttribute _num_rows];          set oldSpacingX [FME_GetAttribute _spacing_x];          set oldSpacingY [FME_GetAttribute _spacing_y];          set kMinNumCells 32;          set kMaxNumCells 512;          set comment {             We will only resample if both dimensions are greater than the             minimum num cells, and at least one is greater than the maximum.          };          if {$oldNumRows > $kMinNumCells && $oldNumCols > $kMinNumCells && ($oldNumRows > $kMaxNumCells || $oldNumCols > $kMaxNumCells)} {             set newSpacingX 1.0;             set newSpacingY 1.0;             if {$oldNumRows > $oldNumCols} {                set comment {                   If we have more rows than columns, we need to choose a spacing                   that reduces the number of rows to the maximum we've chosen.                };                set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMaxNumCells];                set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                set comment {                   Now we need to check if doing this will result in the columns                   going below the minimum. If so, choose the spacing such that                   we only go down to the minimum (and not past).                };                set newNumCols [expr $oldNumCols * $oldSpacingX / $newSpacingX];                if {$newNumCols < $kMinNumCells}                {                   set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMinNumCells];                   set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                };             }             else {                set comment {                   This is identical to the above case, except the roles of                   rows and cols are reversed.                };                set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMaxNumCells];                set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                set newNumRows [expr $oldNumRows * $oldSpacingY / $newSpacingY];                if {$newNumRows < $kMinNumCells}                {                   set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMinNumCells];                   set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                };             };             FME_Execute ResampleRaster CELL_SIZE $newSpacingX $newSpacingY NearestNeighbor;          };       }       elseif {$doSubset} {          set comment {             Get the value of some strings that may be attributes or constants.             Note that we pass in the attribute prefix we're using, because if             one does turn out to be an attribute, it won't actually be the exact             name in the string (since we renamed all our attributes above).          };          set rasterNumRows [FME_GetAttribute _num_rows];          set rasterNumCols [FME_GetAttribute _num_columns];          set comment {             Only do subsetting if the specified start position is actually             within the raster.          };          if {$subsetStartRow < $rasterNumRows && $subsetStartCol < $rasterNumCols}          {             set comment {                Now bound the subset to the size of the raster, so that                we don't create padding.             };             if {[expr $subsetStartRow + $subsetNumRows] > $rasterNumRows}             {                set subsetNumRows [expr $rasterNumRows - $subsetStartRow];             };             if {[expr $subsetStartCol + $subsetNumCols] > $rasterNumCols}             {                set subsetNumCols [expr $rasterNumCols - $subsetStartCol];             };             FME_Execute SubsetRaster $subsetStartRow $subsetNumRows $subsetStartCol $subsetNumCols;          };       };       set comment {          Remove all the attributes added by @RasterProperties and remove the          prefix from the real attributes. We assume they all start with an          underscore.       };       FME_Execute RemoveAttributes fme_regexp_match {^_};       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $oldName $newName;       };    }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME apc_2_RasterSetterUpper    INPUT FEATURE_TYPE apc_2___RasterFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("602be46c_aaf8_4139_a6d8_2e0623a1f41d0_prepareRaster {<Unused>} {<Unused>} {<Unused>} {<Unused>}")
# Now route all the features into the recorder, changing their
# feature type to the transformer name so that they view nicely
# 602be46c_aaf8_4139_a6d8_2e0623a1f41d0_VIS_FEAT_TYPE changes the feature types
# of the features being visualized.

DEFAULT_MACRO 602be46c_aaf8_4139_a6d8_2e0623a1f41d0_VIS_FEAT_TYPE apc_2$(CATMAC)
DEFAULT_MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/$(SAFE_FFS_NAME).ffs
DEFAULT_MACRO VISUALIZER_CREATE_SPATIAL_INDEX NO
FACTORY_DEF * RecorderFactory    FACTORY_NAME apc_2_Recorder    INPUT FEATURE_TYPE __viewme__  _wb_termination_feature Yes @FeatureType(TERMINATOR_@Value(_wb_termination_xformer))    INPUT FEATURE_TYPE __viewme__  @FeatureType($(602be46c_aaf8_4139_a6d8_2e0623a1f41d0_VIS_FEAT_TYPE))    FEATURE_FILE "$(VISUALIZER_FEATURE_FILE)"    CREATE_SPATIAL_INDEX "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    INSPECTOR "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    MODE RECORD_PASS_THROUGH

# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME AttributeRenamer    INPUT  FEATURE_TYPE FillGPSgaps_NEW_0    OUTPUT FEATURE_TYPE AttributeRenamer_OUTPUT         @RenameAttributes(ATTR_LIST_DEF_VAL, theGroupBy,BUS,"")


# -------------------------------------------------------------------------

INCLUDE [ puts "MACRO REAL_RATE [expr 3 * -1 ]" ]
FACTORY_DEF * SamplingFactory    FACTORY_NAME Sampler    SAMPLE_RATE $(REAL_RATE)    INPUT  FEATURE_TYPE Reprojector_REPROJECTED_0    OUTPUT SAMPLED FEATURE_TYPE ___SAMPLED___
# This TeeFactory is needed because Sampler will still output features if it has no OUTPUT clauses specified.
# This way we behave nicely even if there are no output connections on the transformer. See PR#28886.

FACTORY_DEF * TeeFactory    FACTORY_NAME Sampler_Sampled    INPUT FEATURE_TYPE ___SAMPLED___    OUTPUT FEATURE_TYPE Sampler_SAMPLED


# -------------------------------------------------------------------------

# Set the directive to add all the meta-attributes to the features.
# We do this so users see all possible information in the viewed
# features.

READER_META_ATTRIBUTES fme_feature_type fme_dataset fme_basename
# Assumption is that the workspace temp dir has been already set and created.  See controldefs.cpp - ControlDefs::writeVisualizerTempDir
DEFAULT_MACRO WORKSPACE_TEMP_DIR
INCLUDE [         if { [string length {}] > 0 } {             set catter "" ;             set comma "" ;             foreach attr {} {                 set catter "$catter$comma@Value(\"$attr\")" ;                 set comma ",_," ;             } ;             puts "MACRO CATMAC _@Concatenate($catter)" ;         }         else {             puts "MACRO CATMAC " ;         };         set safeName "[regsub -all {[^a-zA-Z0-9]} {apc} _]_[expr round(rand() * 1000000)]_[clock clicks  -milliseconds]";         puts "MACRO SAFE_FFS_NAME $safeName";         ]
# Make the temporary directory that the FFS files will live in.
FACTORY_DEF * CreationFactory      FACTORY_NAME apc_DirCreator      OUTPUT FEATURE_TYPE __nukeme__          @Tcl2("catch {file mkdir {$(WORKSPACE_TEMP_DIR)}}")
FACTORY_DEF * TeeFactory    FACTORY_NAME apc_DirCreatorCleanerUpper    INPUT FEATURE_TYPE __nukeme__
# Send raster, point cloud and vector features down different paths to prepare
# them for viewing

FACTORY_DEF * TestFactory    FACTORY_NAME apc_FeatureDirector    INPUT  FEATURE_TYPE Sampler_SAMPLED    TEST &fme_type == "fme_raster"    OUTPUT FAILED FEATURE_TYPE apc___NotRasterFeatures___    OUTPUT PASSED FEATURE_TYPE apc___RasterFeatures___
FACTORY_DEF * TestFactory    FACTORY_NAME apc___FeatureDirector1    INPUT FEATURE_TYPE apc___NotRasterFeatures___    TEST &fme_type == "fme_point_cloud"    OUTPUT FAILED FEATURE_TYPE apc___VectorFeatures___    OUTPUT PASSED FEATURE_TYPE apc___PointCloudFeatures___
# Vector features simply may get their colors overridden

FACTORY_DEF * TeeFactory    FACTORY_NAME apc_VectorSetterUpper    INPUT FEATURE_TYPE apc___VectorFeatures___    OUTPUT FEATURE_TYPE __viewme__
# Point Cloud Features Might Need to be thinned

# Note that we don't call the ThinPointCloud function directly, but rather
# do it through TCL. This should allow this transformer to be used with a
# Desktop license, even though ThinPointCloud requires Professional.

Tcl2 proc b5c09cce_d7bb_4fca_abdc_919256c3ee660_thinPointCloud {} {    FME_Execute ThinPointCloud NO_THINNING <Unused>; }
FACTORY_DEF * TeeFactory    FACTORY_NAME apc___PointCloudThinner    INPUT FEATURE_TYPE apc___PointCloudFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("b5c09cce_d7bb_4fca_abdc_919256c3ee660_thinPointCloud")
Tcl2 proc b5c09cce_d7bb_4fca_abdc_919256c3ee660_prepareRaster {subsetStartRow subsetNumRows subsetStartCol subsetNumCols} {    set useDI [string equal -nocase {$(FME_VIEWER_APP)} {fmedatainspector}];    if {!$useDI} {       FME_Execute ApplyRasterRotation BILINEAR;    };    set doResample [string equal {NoReduction} {Resample}];    set doSubset [string equal {NoReduction} {Subset}];    set doBounds [string equal {NoReduction} {BoundingBoxOnly}];    if {$doBounds}  {       FME_Execute GeometryType fme_polygon;    }    elseif {$doResample || $doSubset} {       set comment {          First, we need to prefix all the attributes. This is done because          we are going to call @RasterProperties, and we want to make sure          it doesn't overwrite any existing attributes.       };       set kAttrPrefix ".";       set allNames [FME_AttributeNames];       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $newName $oldName;       };       FME_Execute RasterProperties RASTER;       if {$doResample} {          set oldNumCols [FME_GetAttribute _num_columns];          set oldNumRows [FME_GetAttribute _num_rows];          set oldSpacingX [FME_GetAttribute _spacing_x];          set oldSpacingY [FME_GetAttribute _spacing_y];          set kMinNumCells 32;          set kMaxNumCells 512;          set comment {             We will only resample if both dimensions are greater than the             minimum num cells, and at least one is greater than the maximum.          };          if {$oldNumRows > $kMinNumCells && $oldNumCols > $kMinNumCells && ($oldNumRows > $kMaxNumCells || $oldNumCols > $kMaxNumCells)} {             set newSpacingX 1.0;             set newSpacingY 1.0;             if {$oldNumRows > $oldNumCols} {                set comment {                   If we have more rows than columns, we need to choose a spacing                   that reduces the number of rows to the maximum we've chosen.                };                set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMaxNumCells];                set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                set comment {                   Now we need to check if doing this will result in the columns                   going below the minimum. If so, choose the spacing such that                   we only go down to the minimum (and not past).                };                set newNumCols [expr $oldNumCols * $oldSpacingX / $newSpacingX];                if {$newNumCols < $kMinNumCells}                {                   set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMinNumCells];                   set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                };             }             else {                set comment {                   This is identical to the above case, except the roles of                   rows and cols are reversed.                };                set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMaxNumCells];                set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                set newNumRows [expr $oldNumRows * $oldSpacingY / $newSpacingY];                if {$newNumRows < $kMinNumCells}                {                   set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMinNumCells];                   set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                };             };             FME_Execute ResampleRaster CELL_SIZE $newSpacingX $newSpacingY NearestNeighbor;          };       }       elseif {$doSubset} {          set comment {             Get the value of some strings that may be attributes or constants.             Note that we pass in the attribute prefix we're using, because if             one does turn out to be an attribute, it won't actually be the exact             name in the string (since we renamed all our attributes above).          };          set rasterNumRows [FME_GetAttribute _num_rows];          set rasterNumCols [FME_GetAttribute _num_columns];          set comment {             Only do subsetting if the specified start position is actually             within the raster.          };          if {$subsetStartRow < $rasterNumRows && $subsetStartCol < $rasterNumCols}          {             set comment {                Now bound the subset to the size of the raster, so that                we don't create padding.             };             if {[expr $subsetStartRow + $subsetNumRows] > $rasterNumRows}             {                set subsetNumRows [expr $rasterNumRows - $subsetStartRow];             };             if {[expr $subsetStartCol + $subsetNumCols] > $rasterNumCols}             {                set subsetNumCols [expr $rasterNumCols - $subsetStartCol];             };             FME_Execute SubsetRaster $subsetStartRow $subsetNumRows $subsetStartCol $subsetNumCols;          };       };       set comment {          Remove all the attributes added by @RasterProperties and remove the          prefix from the real attributes. We assume they all start with an          underscore.       };       FME_Execute RemoveAttributes fme_regexp_match {^_};       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $oldName $newName;       };    }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME apc_RasterSetterUpper    INPUT FEATURE_TYPE apc___RasterFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("b5c09cce_d7bb_4fca_abdc_919256c3ee660_prepareRaster {<Unused>} {<Unused>} {<Unused>} {<Unused>}")
# Now route all the features into the recorder, changing their
# feature type to the transformer name so that they view nicely
# b5c09cce_d7bb_4fca_abdc_919256c3ee660_VIS_FEAT_TYPE changes the feature types
# of the features being visualized.

DEFAULT_MACRO b5c09cce_d7bb_4fca_abdc_919256c3ee660_VIS_FEAT_TYPE apc$(CATMAC)
DEFAULT_MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/$(SAFE_FFS_NAME).ffs
DEFAULT_MACRO VISUALIZER_CREATE_SPATIAL_INDEX NO
FACTORY_DEF * RecorderFactory    FACTORY_NAME apc_Recorder    INPUT FEATURE_TYPE __viewme__  _wb_termination_feature Yes @FeatureType(TERMINATOR_@Value(_wb_termination_xformer))    INPUT FEATURE_TYPE __viewme__  @FeatureType($(b5c09cce_d7bb_4fca_abdc_919256c3ee660_VIS_FEAT_TYPE))    FEATURE_FILE "$(VISUALIZER_FEATURE_FILE)"    CREATE_SPATIAL_INDEX "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    INSPECTOR "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    MODE RECORD_PASS_THROUGH

# -------------------------------------------------------------------------
MACRO SQLCreator_DIRECTIVES 

FACTORY_DEF * CreationFactory    FACTORY_NAME SQLCreator_Creator    OUTPUT FEATURE_TYPE _____CREATED______
FACTORY_DEF * QueryFactory    FACTORY_NAME SQLCreator    INPUT FEATURE_TYPE _____CREATED______    QUERY_SQL            select<space>*<space>from<space>GFI<space>where<space>GFI.BUS<space>in<space>V_APCBUS<semicolon>    COMBINE_ATTRIBUTES   RESULT_ONLY    COMBINE_GEOMETRY     RESULT_ONLY    READER_TYPE         	SQLITE3    READER_DATASET      	"C:<backslash>AndrewRoss<backslash>Work<backslash>AR_Whistler<backslash>Data<backslash>whistlerData.db"    READER_PARAMS        $(SQLCreator_DIRECTIVES)    OUTPUT RESULT FEATURE_TYPE SQLCreator_RESULT

FACTORY_DEF * TeeFactory   FACTORY_NAME "SQLCreator RESULT Splitter"   INPUT FEATURE_TYPE SQLCreator_RESULT   OUTPUT FEATURE_TYPE SQLCreator_RESULT_0   OUTPUT FEATURE_TYPE SQLCreator_RESULT_1
# -------------------------------------------------------------------------

INCLUDE [ puts "MACRO REAL_RATE [expr 3 * -1 ]" ]
FACTORY_DEF * SamplingFactory    FACTORY_NAME Sampler_2    SAMPLE_RATE $(REAL_RATE)    INPUT  FEATURE_TYPE SQLCreator_RESULT_1    OUTPUT SAMPLED FEATURE_TYPE ___SAMPLED___
# This TeeFactory is needed because Sampler will still output features if it has no OUTPUT clauses specified.
# This way we behave nicely even if there are no output connections on the transformer. See PR#28886.

FACTORY_DEF * TeeFactory    FACTORY_NAME Sampler_2_Sampled    INPUT FEATURE_TYPE ___SAMPLED___    OUTPUT FEATURE_TYPE Sampler_2_SAMPLED


# -------------------------------------------------------------------------

# Set the directive to add all the meta-attributes to the features.
# We do this so users see all possible information in the viewed
# features.

READER_META_ATTRIBUTES fme_feature_type fme_dataset fme_basename
# Assumption is that the workspace temp dir has been already set and created.  See controldefs.cpp - ControlDefs::writeVisualizerTempDir
DEFAULT_MACRO WORKSPACE_TEMP_DIR
INCLUDE [         if { [string length {}] > 0 } {             set catter "" ;             set comma "" ;             foreach attr {} {                 set catter "$catter$comma@Value(\"$attr\")" ;                 set comma ",_," ;             } ;             puts "MACRO CATMAC _@Concatenate($catter)" ;         }         else {             puts "MACRO CATMAC " ;         };         set safeName "[regsub -all {[^a-zA-Z0-9]} {gfi} _]_[expr round(rand() * 1000000)]_[clock clicks  -milliseconds]";         puts "MACRO SAFE_FFS_NAME $safeName";         ]
# Make the temporary directory that the FFS files will live in.
FACTORY_DEF * CreationFactory      FACTORY_NAME gfi_DirCreator      OUTPUT FEATURE_TYPE __nukeme__          @Tcl2("catch {file mkdir {$(WORKSPACE_TEMP_DIR)}}")
FACTORY_DEF * TeeFactory    FACTORY_NAME gfi_DirCreatorCleanerUpper    INPUT FEATURE_TYPE __nukeme__
# Send raster, point cloud and vector features down different paths to prepare
# them for viewing

FACTORY_DEF * TestFactory    FACTORY_NAME gfi_FeatureDirector    INPUT  FEATURE_TYPE Sampler_2_SAMPLED    TEST &fme_type == "fme_raster"    OUTPUT FAILED FEATURE_TYPE gfi___NotRasterFeatures___    OUTPUT PASSED FEATURE_TYPE gfi___RasterFeatures___
FACTORY_DEF * TestFactory    FACTORY_NAME gfi___FeatureDirector1    INPUT FEATURE_TYPE gfi___NotRasterFeatures___    TEST &fme_type == "fme_point_cloud"    OUTPUT FAILED FEATURE_TYPE gfi___VectorFeatures___    OUTPUT PASSED FEATURE_TYPE gfi___PointCloudFeatures___
# Vector features simply may get their colors overridden

FACTORY_DEF * TeeFactory    FACTORY_NAME gfi_VectorSetterUpper    INPUT FEATURE_TYPE gfi___VectorFeatures___    OUTPUT FEATURE_TYPE __viewme__
# Point Cloud Features Might Need to be thinned

# Note that we don't call the ThinPointCloud function directly, but rather
# do it through TCL. This should allow this transformer to be used with a
# Desktop license, even though ThinPointCloud requires Professional.

Tcl2 proc 6e1096de_17bc_490d_acbd_4671bff2b50e0_thinPointCloud {} {    FME_Execute ThinPointCloud NO_THINNING <Unused>; }
FACTORY_DEF * TeeFactory    FACTORY_NAME gfi___PointCloudThinner    INPUT FEATURE_TYPE gfi___PointCloudFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("6e1096de_17bc_490d_acbd_4671bff2b50e0_thinPointCloud")
Tcl2 proc 6e1096de_17bc_490d_acbd_4671bff2b50e0_prepareRaster {subsetStartRow subsetNumRows subsetStartCol subsetNumCols} {    set useDI [string equal -nocase {$(FME_VIEWER_APP)} {fmedatainspector}];    if {!$useDI} {       FME_Execute ApplyRasterRotation BILINEAR;    };    set doResample [string equal {NoReduction} {Resample}];    set doSubset [string equal {NoReduction} {Subset}];    set doBounds [string equal {NoReduction} {BoundingBoxOnly}];    if {$doBounds}  {       FME_Execute GeometryType fme_polygon;    }    elseif {$doResample || $doSubset} {       set comment {          First, we need to prefix all the attributes. This is done because          we are going to call @RasterProperties, and we want to make sure          it doesn't overwrite any existing attributes.       };       set kAttrPrefix ".";       set allNames [FME_AttributeNames];       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $newName $oldName;       };       FME_Execute RasterProperties RASTER;       if {$doResample} {          set oldNumCols [FME_GetAttribute _num_columns];          set oldNumRows [FME_GetAttribute _num_rows];          set oldSpacingX [FME_GetAttribute _spacing_x];          set oldSpacingY [FME_GetAttribute _spacing_y];          set kMinNumCells 32;          set kMaxNumCells 512;          set comment {             We will only resample if both dimensions are greater than the             minimum num cells, and at least one is greater than the maximum.          };          if {$oldNumRows > $kMinNumCells && $oldNumCols > $kMinNumCells && ($oldNumRows > $kMaxNumCells || $oldNumCols > $kMaxNumCells)} {             set newSpacingX 1.0;             set newSpacingY 1.0;             if {$oldNumRows > $oldNumCols} {                set comment {                   If we have more rows than columns, we need to choose a spacing                   that reduces the number of rows to the maximum we've chosen.                };                set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMaxNumCells];                set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                set comment {                   Now we need to check if doing this will result in the columns                   going below the minimum. If so, choose the spacing such that                   we only go down to the minimum (and not past).                };                set newNumCols [expr $oldNumCols * $oldSpacingX / $newSpacingX];                if {$newNumCols < $kMinNumCells}                {                   set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMinNumCells];                   set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                };             }             else {                set comment {                   This is identical to the above case, except the roles of                   rows and cols are reversed.                };                set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMaxNumCells];                set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                set newNumRows [expr $oldNumRows * $oldSpacingY / $newSpacingY];                if {$newNumRows < $kMinNumCells}                {                   set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMinNumCells];                   set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                };             };             FME_Execute ResampleRaster CELL_SIZE $newSpacingX $newSpacingY NearestNeighbor;          };       }       elseif {$doSubset} {          set comment {             Get the value of some strings that may be attributes or constants.             Note that we pass in the attribute prefix we're using, because if             one does turn out to be an attribute, it won't actually be the exact             name in the string (since we renamed all our attributes above).          };          set rasterNumRows [FME_GetAttribute _num_rows];          set rasterNumCols [FME_GetAttribute _num_columns];          set comment {             Only do subsetting if the specified start position is actually             within the raster.          };          if {$subsetStartRow < $rasterNumRows && $subsetStartCol < $rasterNumCols}          {             set comment {                Now bound the subset to the size of the raster, so that                we don't create padding.             };             if {[expr $subsetStartRow + $subsetNumRows] > $rasterNumRows}             {                set subsetNumRows [expr $rasterNumRows - $subsetStartRow];             };             if {[expr $subsetStartCol + $subsetNumCols] > $rasterNumCols}             {                set subsetNumCols [expr $rasterNumCols - $subsetStartCol];             };             FME_Execute SubsetRaster $subsetStartRow $subsetNumRows $subsetStartCol $subsetNumCols;          };       };       set comment {          Remove all the attributes added by @RasterProperties and remove the          prefix from the real attributes. We assume they all start with an          underscore.       };       FME_Execute RemoveAttributes fme_regexp_match {^_};       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $oldName $newName;       };    }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME gfi_RasterSetterUpper    INPUT FEATURE_TYPE gfi___RasterFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("6e1096de_17bc_490d_acbd_4671bff2b50e0_prepareRaster {<Unused>} {<Unused>} {<Unused>} {<Unused>}")
# Now route all the features into the recorder, changing their
# feature type to the transformer name so that they view nicely
# 6e1096de_17bc_490d_acbd_4671bff2b50e0_VIS_FEAT_TYPE changes the feature types
# of the features being visualized.

DEFAULT_MACRO 6e1096de_17bc_490d_acbd_4671bff2b50e0_VIS_FEAT_TYPE gfi$(CATMAC)
DEFAULT_MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/$(SAFE_FFS_NAME).ffs
DEFAULT_MACRO VISUALIZER_CREATE_SPATIAL_INDEX NO
FACTORY_DEF * RecorderFactory    FACTORY_NAME gfi_Recorder    INPUT FEATURE_TYPE __viewme__  _wb_termination_feature Yes @FeatureType(TERMINATOR_@Value(_wb_termination_xformer))    INPUT FEATURE_TYPE __viewme__  @FeatureType($(6e1096de_17bc_490d_acbd_4671bff2b50e0_VIS_FEAT_TYPE))    FEATURE_FILE "$(VISUALIZER_FEATURE_FILE)"    CREATE_SPATIAL_INDEX "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    INSPECTOR "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    MODE RECORD_PASS_THROUGH

# -------------------------------------------------------------------------

FACTORY_DEF * ReferenceFactory    FACTORY_NAME FeatureMerger_2    GROUP_BY BUS    INPUT REFERENCER FEATURE_TYPE SQLCreator_RESULT_0    INPUT REFERENCEE FEATURE_TYPE FillGPSgaps_ORIGINAL    INPUT REFERENCEE FEATURE_TYPE AttributeRenamer_OUTPUT    REFERENCE_INFO ATTRIBUTES    REFERENCEE_FIELDS "e"    REFERENCER_FIELDS "TIMESTAMP"    MERGE_ATTRIBUTES Yes    MANAGE_FME_TYPE Yes    MODE COMPLETE    PROCESS_DUPLICATE_REFERENCEES No    BUILD_INCOMPLETE_REFERENCERS No    OUTPUT COMPLETE FEATURE_TYPE FeatureMerger_2_COMPLETE    OUTPUT INCOMPLETE FEATURE_TYPE FeatureMerger_2_INCOMPLETE

# -------------------------------------------------------------------------

# Set the directive to add all the meta-attributes to the features.
# We do this so users see all possible information in the viewed
# features.

READER_META_ATTRIBUTES fme_feature_type fme_dataset fme_basename
# Assumption is that the workspace temp dir has been already set and created.  See controldefs.cpp - ControlDefs::writeVisualizerTempDir
DEFAULT_MACRO WORKSPACE_TEMP_DIR
INCLUDE [         if { [string length {}] > 0 } {             set catter "" ;             set comma "" ;             foreach attr {} {                 set catter "$catter$comma@Value(\"$attr\")" ;                 set comma ",_," ;             } ;             puts "MACRO CATMAC _@Concatenate($catter)" ;         }         else {             puts "MACRO CATMAC " ;         };         set safeName "[regsub -all {[^a-zA-Z0-9]} {FeatureMerger_2_INCOMPLETE} _]_[expr round(rand() * 1000000)]_[clock clicks  -milliseconds]";         puts "MACRO SAFE_FFS_NAME $safeName";         ]
# Make the temporary directory that the FFS files will live in.
FACTORY_DEF * CreationFactory      FACTORY_NAME FeatureMerger_2_INCOMPLETE_DirCreator      OUTPUT FEATURE_TYPE __nukeme__          @Tcl2("catch {file mkdir {$(WORKSPACE_TEMP_DIR)}}")
FACTORY_DEF * TeeFactory    FACTORY_NAME FeatureMerger_2_INCOMPLETE_DirCreatorCleanerUpper    INPUT FEATURE_TYPE __nukeme__
# Send raster, point cloud and vector features down different paths to prepare
# them for viewing

FACTORY_DEF * TestFactory    FACTORY_NAME FeatureMerger_2_INCOMPLETE_FeatureDirector    INPUT  FEATURE_TYPE FeatureMerger_2_INCOMPLETE    TEST &fme_type == "fme_raster"    OUTPUT FAILED FEATURE_TYPE FeatureMerger_2_INCOMPLETE___NotRasterFeatures___    OUTPUT PASSED FEATURE_TYPE FeatureMerger_2_INCOMPLETE___RasterFeatures___
FACTORY_DEF * TestFactory    FACTORY_NAME FeatureMerger_2_INCOMPLETE___FeatureDirector1    INPUT FEATURE_TYPE FeatureMerger_2_INCOMPLETE___NotRasterFeatures___    TEST &fme_type == "fme_point_cloud"    OUTPUT FAILED FEATURE_TYPE FeatureMerger_2_INCOMPLETE___VectorFeatures___    OUTPUT PASSED FEATURE_TYPE FeatureMerger_2_INCOMPLETE___PointCloudFeatures___
# Vector features simply may get their colors overridden

FACTORY_DEF * TeeFactory    FACTORY_NAME FeatureMerger_2_INCOMPLETE_VectorSetterUpper    INPUT FEATURE_TYPE FeatureMerger_2_INCOMPLETE___VectorFeatures___    OUTPUT FEATURE_TYPE __viewme__
# Point Cloud Features Might Need to be thinned

# Note that we don't call the ThinPointCloud function directly, but rather
# do it through TCL. This should allow this transformer to be used with a
# Desktop license, even though ThinPointCloud requires Professional.

Tcl2 proc b8b34dde_7c06_43e3_ad0d_3d392334793f0_thinPointCloud {} {    FME_Execute ThinPointCloud NO_THINNING 1; }
FACTORY_DEF * TeeFactory    FACTORY_NAME FeatureMerger_2_INCOMPLETE___PointCloudThinner    INPUT FEATURE_TYPE FeatureMerger_2_INCOMPLETE___PointCloudFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("b8b34dde_7c06_43e3_ad0d_3d392334793f0_thinPointCloud")
Tcl2 proc b8b34dde_7c06_43e3_ad0d_3d392334793f0_prepareRaster {subsetStartRow subsetNumRows subsetStartCol subsetNumCols} {    set useDI [string equal -nocase {$(FME_VIEWER_APP)} {fmedatainspector}];    if {!$useDI} {       FME_Execute ApplyRasterRotation BILINEAR;    };    set doResample [string equal {NoReduction} {Resample}];    set doSubset [string equal {NoReduction} {Subset}];    set doBounds [string equal {NoReduction} {BoundingBoxOnly}];    if {$doBounds}  {       FME_Execute GeometryType fme_polygon;    }    elseif {$doResample || $doSubset} {       set comment {          First, we need to prefix all the attributes. This is done because          we are going to call @RasterProperties, and we want to make sure          it doesn't overwrite any existing attributes.       };       set kAttrPrefix ".";       set allNames [FME_AttributeNames];       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $newName $oldName;       };       FME_Execute RasterProperties RASTER;       if {$doResample} {          set oldNumCols [FME_GetAttribute _num_columns];          set oldNumRows [FME_GetAttribute _num_rows];          set oldSpacingX [FME_GetAttribute _spacing_x];          set oldSpacingY [FME_GetAttribute _spacing_y];          set kMinNumCells 32;          set kMaxNumCells 512;          set comment {             We will only resample if both dimensions are greater than the             minimum num cells, and at least one is greater than the maximum.          };          if {$oldNumRows > $kMinNumCells && $oldNumCols > $kMinNumCells && ($oldNumRows > $kMaxNumCells || $oldNumCols > $kMaxNumCells)} {             set newSpacingX 1.0;             set newSpacingY 1.0;             if {$oldNumRows > $oldNumCols} {                set comment {                   If we have more rows than columns, we need to choose a spacing                   that reduces the number of rows to the maximum we've chosen.                };                set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMaxNumCells];                set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                set comment {                   Now we need to check if doing this will result in the columns                   going below the minimum. If so, choose the spacing such that                   we only go down to the minimum (and not past).                };                set newNumCols [expr $oldNumCols * $oldSpacingX / $newSpacingX];                if {$newNumCols < $kMinNumCells}                {                   set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMinNumCells];                   set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                };             }             else {                set comment {                   This is identical to the above case, except the roles of                   rows and cols are reversed.                };                set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMaxNumCells];                set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                set newNumRows [expr $oldNumRows * $oldSpacingY / $newSpacingY];                if {$newNumRows < $kMinNumCells}                {                   set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMinNumCells];                   set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                };             };             FME_Execute ResampleRaster CELL_SIZE $newSpacingX $newSpacingY NearestNeighbor;          };       }       elseif {$doSubset} {          set comment {             Get the value of some strings that may be attributes or constants.             Note that we pass in the attribute prefix we're using, because if             one does turn out to be an attribute, it won't actually be the exact             name in the string (since we renamed all our attributes above).          };          set rasterNumRows [FME_GetAttribute _num_rows];          set rasterNumCols [FME_GetAttribute _num_columns];          set comment {             Only do subsetting if the specified start position is actually             within the raster.          };          if {$subsetStartRow < $rasterNumRows && $subsetStartCol < $rasterNumCols}          {             set comment {                Now bound the subset to the size of the raster, so that                we don't create padding.             };             if {[expr $subsetStartRow + $subsetNumRows] > $rasterNumRows}             {                set subsetNumRows [expr $rasterNumRows - $subsetStartRow];             };             if {[expr $subsetStartCol + $subsetNumCols] > $rasterNumCols}             {                set subsetNumCols [expr $rasterNumCols - $subsetStartCol];             };             FME_Execute SubsetRaster $subsetStartRow $subsetNumRows $subsetStartCol $subsetNumCols;          };       };       set comment {          Remove all the attributes added by @RasterProperties and remove the          prefix from the real attributes. We assume they all start with an          underscore.       };       FME_Execute RemoveAttributes fme_regexp_match {^_};       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $oldName $newName;       };    }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME FeatureMerger_2_INCOMPLETE_RasterSetterUpper    INPUT FEATURE_TYPE FeatureMerger_2_INCOMPLETE___RasterFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("b8b34dde_7c06_43e3_ad0d_3d392334793f0_prepareRaster {<Unused>} {<Unused>} {<Unused>} {<Unused>}")
# Now route all the features into the recorder, changing their
# feature type to the transformer name so that they view nicely
# b8b34dde_7c06_43e3_ad0d_3d392334793f0_VIS_FEAT_TYPE changes the feature types
# of the features being visualized.

DEFAULT_MACRO b8b34dde_7c06_43e3_ad0d_3d392334793f0_VIS_FEAT_TYPE FeatureMerger_2_INCOMPLETE$(CATMAC)
DEFAULT_MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/$(SAFE_FFS_NAME).ffs
DEFAULT_MACRO VISUALIZER_CREATE_SPATIAL_INDEX NO
FACTORY_DEF * RecorderFactory    FACTORY_NAME FeatureMerger_2_INCOMPLETE_Recorder    INPUT FEATURE_TYPE __viewme__  _wb_termination_feature Yes @FeatureType(TERMINATOR_@Value(_wb_termination_xformer))    INPUT FEATURE_TYPE __viewme__  @FeatureType($(b8b34dde_7c06_43e3_ad0d_3d392334793f0_VIS_FEAT_TYPE))    FEATURE_FILE "$(VISUALIZER_FEATURE_FILE)"    CREATE_SPATIAL_INDEX "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    INSPECTOR "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    MODE RECORD_PASS_THROUGH

# -------------------------------------------------------------------------

# Set the directive to add all the meta-attributes to the features.
# We do this so users see all possible information in the viewed
# features.

READER_META_ATTRIBUTES fme_feature_type fme_dataset fme_basename
# Assumption is that the workspace temp dir has been already set and created.  See controldefs.cpp - ControlDefs::writeVisualizerTempDir
DEFAULT_MACRO WORKSPACE_TEMP_DIR
INCLUDE [         if { [string length {}] > 0 } {             set catter "" ;             set comma "" ;             foreach attr {} {                 set catter "$catter$comma@Value(\"$attr\")" ;                 set comma ",_," ;             } ;             puts "MACRO CATMAC _@Concatenate($catter)" ;         }         else {             puts "MACRO CATMAC " ;         };         set safeName "[regsub -all {[^a-zA-Z0-9]} {FeatureMerger_2_COMPLETE} _]_[expr round(rand() * 1000000)]_[clock clicks  -milliseconds]";         puts "MACRO SAFE_FFS_NAME $safeName";         ]
# Make the temporary directory that the FFS files will live in.
FACTORY_DEF * CreationFactory      FACTORY_NAME FeatureMerger_2_COMPLETE_DirCreator      OUTPUT FEATURE_TYPE __nukeme__          @Tcl2("catch {file mkdir {$(WORKSPACE_TEMP_DIR)}}")
FACTORY_DEF * TeeFactory    FACTORY_NAME FeatureMerger_2_COMPLETE_DirCreatorCleanerUpper    INPUT FEATURE_TYPE __nukeme__
# Send raster, point cloud and vector features down different paths to prepare
# them for viewing

FACTORY_DEF * TestFactory    FACTORY_NAME FeatureMerger_2_COMPLETE_FeatureDirector    INPUT  FEATURE_TYPE FeatureMerger_2_COMPLETE    TEST &fme_type == "fme_raster"    OUTPUT FAILED FEATURE_TYPE FeatureMerger_2_COMPLETE___NotRasterFeatures___    OUTPUT PASSED FEATURE_TYPE FeatureMerger_2_COMPLETE___RasterFeatures___
FACTORY_DEF * TestFactory    FACTORY_NAME FeatureMerger_2_COMPLETE___FeatureDirector1    INPUT FEATURE_TYPE FeatureMerger_2_COMPLETE___NotRasterFeatures___    TEST &fme_type == "fme_point_cloud"    OUTPUT FAILED FEATURE_TYPE FeatureMerger_2_COMPLETE___VectorFeatures___    OUTPUT PASSED FEATURE_TYPE FeatureMerger_2_COMPLETE___PointCloudFeatures___
# Vector features simply may get their colors overridden

FACTORY_DEF * TeeFactory    FACTORY_NAME FeatureMerger_2_COMPLETE_VectorSetterUpper    INPUT FEATURE_TYPE FeatureMerger_2_COMPLETE___VectorFeatures___    OUTPUT FEATURE_TYPE __viewme__
# Point Cloud Features Might Need to be thinned

# Note that we don't call the ThinPointCloud function directly, but rather
# do it through TCL. This should allow this transformer to be used with a
# Desktop license, even though ThinPointCloud requires Professional.

Tcl2 proc 99f701bc_bc23_4de7_a543_aa41676792430_thinPointCloud {} {    FME_Execute ThinPointCloud NO_THINNING 1; }
FACTORY_DEF * TeeFactory    FACTORY_NAME FeatureMerger_2_COMPLETE___PointCloudThinner    INPUT FEATURE_TYPE FeatureMerger_2_COMPLETE___PointCloudFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("99f701bc_bc23_4de7_a543_aa41676792430_thinPointCloud")
Tcl2 proc 99f701bc_bc23_4de7_a543_aa41676792430_prepareRaster {subsetStartRow subsetNumRows subsetStartCol subsetNumCols} {    set useDI [string equal -nocase {$(FME_VIEWER_APP)} {fmedatainspector}];    if {!$useDI} {       FME_Execute ApplyRasterRotation BILINEAR;    };    set doResample [string equal {NoReduction} {Resample}];    set doSubset [string equal {NoReduction} {Subset}];    set doBounds [string equal {NoReduction} {BoundingBoxOnly}];    if {$doBounds}  {       FME_Execute GeometryType fme_polygon;    }    elseif {$doResample || $doSubset} {       set comment {          First, we need to prefix all the attributes. This is done because          we are going to call @RasterProperties, and we want to make sure          it doesn't overwrite any existing attributes.       };       set kAttrPrefix ".";       set allNames [FME_AttributeNames];       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $newName $oldName;       };       FME_Execute RasterProperties RASTER;       if {$doResample} {          set oldNumCols [FME_GetAttribute _num_columns];          set oldNumRows [FME_GetAttribute _num_rows];          set oldSpacingX [FME_GetAttribute _spacing_x];          set oldSpacingY [FME_GetAttribute _spacing_y];          set kMinNumCells 32;          set kMaxNumCells 512;          set comment {             We will only resample if both dimensions are greater than the             minimum num cells, and at least one is greater than the maximum.          };          if {$oldNumRows > $kMinNumCells && $oldNumCols > $kMinNumCells && ($oldNumRows > $kMaxNumCells || $oldNumCols > $kMaxNumCells)} {             set newSpacingX 1.0;             set newSpacingY 1.0;             if {$oldNumRows > $oldNumCols} {                set comment {                   If we have more rows than columns, we need to choose a spacing                   that reduces the number of rows to the maximum we've chosen.                };                set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMaxNumCells];                set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                set comment {                   Now we need to check if doing this will result in the columns                   going below the minimum. If so, choose the spacing such that                   we only go down to the minimum (and not past).                };                set newNumCols [expr $oldNumCols * $oldSpacingX / $newSpacingX];                if {$newNumCols < $kMinNumCells}                {                   set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMinNumCells];                   set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                };             }             else {                set comment {                   This is identical to the above case, except the roles of                   rows and cols are reversed.                };                set newSpacingX [expr 1.0 * $oldNumCols * $oldSpacingX / $kMaxNumCells];                set newSpacingY [expr 1.0 * $newSpacingX / $oldSpacingX * $oldSpacingY];                set newNumRows [expr $oldNumRows * $oldSpacingY / $newSpacingY];                if {$newNumRows < $kMinNumCells}                {                   set newSpacingY [expr 1.0 * $oldNumRows * $oldSpacingY / $kMinNumCells];                   set newSpacingX [expr 1.0 * $newSpacingY / $oldSpacingY * $oldSpacingX];                };             };             FME_Execute ResampleRaster CELL_SIZE $newSpacingX $newSpacingY NearestNeighbor;          };       }       elseif {$doSubset} {          set comment {             Get the value of some strings that may be attributes or constants.             Note that we pass in the attribute prefix we're using, because if             one does turn out to be an attribute, it won't actually be the exact             name in the string (since we renamed all our attributes above).          };          set rasterNumRows [FME_GetAttribute _num_rows];          set rasterNumCols [FME_GetAttribute _num_columns];          set comment {             Only do subsetting if the specified start position is actually             within the raster.          };          if {$subsetStartRow < $rasterNumRows && $subsetStartCol < $rasterNumCols}          {             set comment {                Now bound the subset to the size of the raster, so that                we don't create padding.             };             if {[expr $subsetStartRow + $subsetNumRows] > $rasterNumRows}             {                set subsetNumRows [expr $rasterNumRows - $subsetStartRow];             };             if {[expr $subsetStartCol + $subsetNumCols] > $rasterNumCols}             {                set subsetNumCols [expr $rasterNumCols - $subsetStartCol];             };             FME_Execute SubsetRaster $subsetStartRow $subsetNumRows $subsetStartCol $subsetNumCols;          };       };       set comment {          Remove all the attributes added by @RasterProperties and remove the          prefix from the real attributes. We assume they all start with an          underscore.       };       FME_Execute RemoveAttributes fme_regexp_match {^_};       foreach oldName $allNames {          set newName $kAttrPrefix;          append newName $oldName;          FME_RenameAttribute $oldName $newName;       };    }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME FeatureMerger_2_COMPLETE_RasterSetterUpper    INPUT FEATURE_TYPE FeatureMerger_2_COMPLETE___RasterFeatures___    OUTPUT FEATURE_TYPE __viewme__       @Tcl2("99f701bc_bc23_4de7_a543_aa41676792430_prepareRaster {<Unused>} {<Unused>} {<Unused>} {<Unused>}")
# Now route all the features into the recorder, changing their
# feature type to the transformer name so that they view nicely
# 99f701bc_bc23_4de7_a543_aa41676792430_VIS_FEAT_TYPE changes the feature types
# of the features being visualized.

DEFAULT_MACRO 99f701bc_bc23_4de7_a543_aa41676792430_VIS_FEAT_TYPE FeatureMerger_2_COMPLETE$(CATMAC)
DEFAULT_MACRO VISUALIZER_FEATURE_FILE $(WORKSPACE_TEMP_DIR)/$(SAFE_FFS_NAME).ffs
DEFAULT_MACRO VISUALIZER_CREATE_SPATIAL_INDEX NO
FACTORY_DEF * RecorderFactory    FACTORY_NAME FeatureMerger_2_COMPLETE_Recorder    INPUT FEATURE_TYPE __viewme__  _wb_termination_feature Yes @FeatureType(TERMINATOR_@Value(_wb_termination_xformer))    INPUT FEATURE_TYPE __viewme__  @FeatureType($(99f701bc_bc23_4de7_a543_aa41676792430_VIS_FEAT_TYPE))    FEATURE_FILE "$(VISUALIZER_FEATURE_FILE)"    CREATE_SPATIAL_INDEX "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    INSPECTOR "$(VISUALIZER_CREATE_SPATIAL_INDEX)"    MODE RECORD_PASS_THROUGH

# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME "Tester_FAILED -> noCoordinatesFound Correlator"    INPUT FEATURE_TYPE Tester_FAILED    OUTPUT FEATURE_TYPE __GO_TO_FINAL_OUTPUT_ROUTER__       @Transform(FME_GENERIC,CSV)       @SupplyAttributes(__wb_out_feat_type__,noCoordinatesFound)
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory    FACTORY_NAME "AttributeRemover_2_OUTPUT -> added Correlator"    INPUT FEATURE_TYPE AttributeRemover_2_OUTPUT    OUTPUT FEATURE_TYPE __GO_TO_FINAL_OUTPUT_ROUTER__       @Transform(FME_GENERIC,CSV)       @SupplyAttributes(__wb_out_feat_type__,added)
# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory   FACTORY_NAME "Final Output Feature Type Router"   INPUT FEATURE_TYPE *   TEST @Value(__wb_out_feat_type__) != ""   OUTPUT PASSED FEATURE_TYPE *     @FeatureType(@Value(__wb_out_feat_type__))   OUTPUT FAILED FEATURE_TYPE __nuke_me__ @Tcl2("FME_StatMessage 818059 {@Value(fme_template_feature_type)} 818060 818061 fme_warn")
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory   FACTORY_NAME "Final Output Nuker"   INPUT FEATURE_TYPE __nuke_me__

# -------------------------------------------------------------------------

FACTORY_DEF * CreationFactory   CREATE_AT_END   OUTPUT FEATURE_TYPE __NUKEME__   @TCL("if [file exists {$(WORKSPACE_TEMP_DIR)}] {set files [glob -nocomplain -directory  {$(WORKSPACE_TEMP_DIR)} -tails *.ffs];   if {[llength $files] == 1} {    set theFile {$(WORKSPACE_TEMP_DIR)/};   append theFile [lindex $files 0];   eval FME_Execute System \173\042$(FME_HOME_UNIX)/fmeview\042 /ownffs $theFile & \175;  } elseif { [llength $files] == 0 } {  catch { file delete -force {$(WORKSPACE_TEMP_DIR)} };  } else {  set filesNoExt {}; foreach {fileName} $files { lappend filesNoExt [string trimright $fileName {.ffs}] };  eval FME_Execute System \173\042$(FME_HOME_UNIX)/fmeview\042 /ownffs {$(WORKSPACE_TEMP_DIR)} $filesNoExt & \175; }; }; ")
FACTORY_DEF * TeeFactory   INPUT FEATURE_TYPE __NUKEME__
# -------------------------------------------------------------------------
CSV_1_DEF noCoordinatesFound   csv_append_mode              INHERIT_FROM_WRITER   csv_field_names              INHERIT_FROM_WRITER
# -------------------------------------------------------------------------
CSV_1_DEF added   csv_append_mode              INHERIT_FROM_WRITER   csv_field_names              INHERIT_FROM_WRITER   BUS                          char(20)   TIMESTAMP                    char(20)   ROUTE                        char(20)   TS                           char(20)   LAT                          char(20)   LON                          char(20)   TYPE                         char(20)
